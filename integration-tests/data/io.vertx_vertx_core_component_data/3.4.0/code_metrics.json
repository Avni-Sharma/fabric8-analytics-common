{
  "_audit": {
    "ended_at": "2017-03-13T17:52:18.249207",
    "started_at": "2017-03-13T17:52:14.645997",
    "version": "v1"
  },
  "_release": "maven:io.vertx:vertx-core:3.4.0",
  "details": {
    "languages": [
      {
        "blank_lines": 9072,
        "code_lines": 43294,
        "comment_lines": 27974,
        "files_count": 436,
        "language": "Java",
        "metrics": {
          "functions": {
            "average_cyclomatic_complexity": 1.34,
            "average_javadocs": 0.45,
            "function": [
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.AnnotatedCli.setFlag(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.AnnotatedCli.setName(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.AnnotatedCli.setArg(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.CLIExamples.example1()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.CLIExamples.example2()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.CLIExamples.example3()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.CLIExamples.example4()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.CLIExamples.example41()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.CLIExamples.example5()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.CLIExamples.example51()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.CLIExamples.example6()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.CLIExamples.example7(CLI,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.CLIExamples.example8(CLI,String)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "examples.cli.CLIExamples.example9(PrintStream)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.MyCommand.setName(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.MyCommand.run()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.TypedCLIExamples.example1()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.TypedCLIExamples.example2(CLI,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.TypedCLIExamples.example3()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.TypedCLIExamples.example4(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.cli.TypedCLIExamples.PersonConverter.fromString(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.BufferExamples.example1()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.BufferExamples.example2()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.BufferExamples.example3()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.BufferExamples.example5()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.BufferExamples.example6(NetSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.BufferExamples.example7()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "examples.BufferExamples.example8()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.BufferExamples.example9()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "examples.ConfigurableVerticleExamples.start()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferFactoryImpl.buffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferFactoryImpl.buffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferFactoryImpl.buffer(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferFactoryImpl.buffer(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferFactoryImpl.buffer(Buffer[])"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferFactoryImpl.buffer(ByteBuf)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.BufferImpl()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.BufferImpl(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.BufferImpl(Integer.MAX_VALUE[])"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.BufferImpl(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.BufferImpl(String,Charset)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.BufferImpl(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.BufferImpl(ByteBuf)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.toString()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.toString(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.toString(Charset)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.toJsonObject()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.toJsonArray()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getByte(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getUnsignedByte(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getInt(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getIntLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getUnsignedInt(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getUnsignedIntLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getLong(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getLongLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getDouble(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getFloat(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getShort(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getShortLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getUnsignedShort(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getUnsignedShortLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getMedium(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getMediumLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getUnsignedMedium(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getUnsignedMediumLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getBytes()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getBytes(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getBytes(Buffer[])"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getBytes(Buffer[],int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getBytes(int,int,int[])"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getBytes(int,int,int[],int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getBuffer(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getString(int,int,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getString(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendBuffer(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendBuffer(Buffer,int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendBytes(Buffer[])"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendBytes(Buffer[],int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendByte(byte)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendUnsignedByte(short)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendInt(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendIntLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendUnsignedInt(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendUnsignedIntLE(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendMedium(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendMediumLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendLong(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendLongLE(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendShort(short)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendShortLE(short)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendUnsignedShort(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendUnsignedShortLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendFloat(float)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendDouble(double)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendString(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.appendString(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setByte(int,byte)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setUnsignedByte(int,short)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setInt(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setIntLE(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setUnsignedInt(int,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setUnsignedIntLE(int,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setMedium(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setMediumLE(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setLong(int,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setLongLE(int,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setDouble(int,double)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setFloat(int,float)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setShort(int,short)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setShortLE(int,short)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setUnsignedShort(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setUnsignedShortLE(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setBuffer(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setBuffer(int,Buffer,int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setBytes(int,ByteBuffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setBytes(int,int[])"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setBytes(int,int[],int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setString(int,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setString(int,String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.length()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.copy()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.slice()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.slice(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.getByteBuf()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.append(String,Charset)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.setBytes(int,String,Charset)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.ensureWritable(int,int)"
              },
              {
                "cyclomatic_complexity": 7,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.equals(Object)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.hashCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.writeToBuffer(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.buffer.impl.BufferImpl.readFromBuffer(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.buffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.buffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.buffer(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.buffer(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.buffer(Buffer[])"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.buffer(ByteBuf)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.toString()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.toString(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.toString(Charset)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.toJsonObject()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.toJsonArray()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getByte(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getUnsignedByte(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getInt(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getIntLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getUnsignedInt(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getUnsignedIntLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getLong(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getLongLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getDouble(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getFloat(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getShort(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getShortLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getUnsignedShort(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getUnsignedShortLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getMedium(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getMediumLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getUnsignedMedium(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getUnsignedMediumLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getBytes()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getBytes(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getBytes(Buffer[])"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getBytes(Buffer[],int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getBytes(int,int,int[])"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getBytes(int,int,int[],int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getBuffer(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getString(int,int,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getString(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendBuffer(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendBuffer(Buffer,int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendBytes(Buffer[])"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendBytes(Buffer[],int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendByte(byte)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendUnsignedByte(short)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendInt(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendIntLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendUnsignedInt(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendUnsignedIntLE(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendMedium(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendMediumLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendLong(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendLongLE(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendShort(short)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendShortLE(short)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendUnsignedShort(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendUnsignedShortLE(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendFloat(float)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendDouble(double)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendString(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.appendString(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setByte(int,byte)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setUnsignedByte(int,short)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setInt(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setIntLE(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setUnsignedInt(int,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setUnsignedIntLE(int,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setMedium(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setMediumLE(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setLong(int,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setLongLE(int,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setDouble(int,double)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setFloat(int,float)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setShort(int,short)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setShortLE(int,short)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setUnsignedShort(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setUnsignedShortLE(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setBuffer(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setBuffer(int,Buffer,int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setBytes(int,ByteBuffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setBytes(int,int[])"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setBytes(int,int[],int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setString(int,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.setString(int,String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.length()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.copy()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.slice()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.slice(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.Buffer.getByteBuf()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.converters.BooleanConverter.BooleanConverter()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 1,
                "name": "io.vertx.core.cli.converters.BooleanConverter.fromString(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.converters.CharacterConverter.CharacterConverter()"
              },
              {
                "cyclomatic_complexity": 5,
                "javadocs": 0,
                "name": "io.vertx.core.cli.converters.CharacterConverter.fromString(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.converters.Converter.fromString(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.converters.StringConverter.StringConverter()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.converters.StringConverter.fromString(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.Argument()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.Argument(Argument)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.Argument(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.toJson()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.getArgName()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.setArgName(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.getDescription()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.setDescription(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.isHidden()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.setHidden(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.getIndex()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.setIndex(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.isRequired()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.setRequired(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.getDefaultValue()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.setDefaultValue(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.isMultiValued()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.setMultiValued(boolean)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.cli.Argument.ensureValidity()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.create(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.create(Class)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.parse(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.parse(String,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.getName()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.setName(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.getDescription()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.CLI.setDescription(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.getSummary()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.setSummary(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.isHidden()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.setHidden(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.getOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.addOption(Option)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.addOptions(Option)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.setOptions(Option)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.getArguments()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.addArgument(Argument)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.addArguments(Argument)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.setArguments(Argument)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.getOption(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.getArgument(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.getArgument(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.removeOption(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.removeArgument(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.usage(StringBuilder)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLI.usage(StringBuilder,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLIException.CLIException(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.CLIException.CLIException(String,Exception)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.InvalidValueException.InvalidValueException(Option,String)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 1,
                "name": "io.vertx.core.cli.InvalidValueException.InvalidValueException(Argument,String,Exception)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.InvalidValueException.InvalidValueException(Option,String,Exception)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.InvalidValueException.getOption()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.InvalidValueException.getValue()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.InvalidValueException.getArgument()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.MissingValueException.MissingValueException(Option)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 1,
                "name": "io.vertx.core.cli.MissingValueException.MissingValueException(Argument)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.MissingValueException.getOption()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.MissingValueException.getArgument()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.TypedArgument.TypedArgument(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.TypedArgument.TypedArgument()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.TypedArgument.getType()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.TypedArgument.setType(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.TypedArgument.getConverter()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.TypedArgument.setConverter(T)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.cli.TypedArgument.ensureValidity()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedArgument.setArgName(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedArgument.setDefaultValue(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedArgument.setDescription(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedArgument.setHidden(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedArgument.setIndex(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedArgument.setRequired(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedArgument.setMultiValued(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.TypedOption.TypedOption()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.TypedOption.TypedOption(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.setMultiValued(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.setSingleValued(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.setArgName(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.setDefaultValue(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.setDescription(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.setFlag(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.setHidden(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.setLongName(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.setRequired(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.setShortName(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.getType()"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.setType(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.isParsedAsList()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.setParsedAsList(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.getListSeparator()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.setListSeparator(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.getConverter()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.setConverter(T)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.ensureValidity()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.setChoices(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.cli.TypedOption.addChoice(String)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 1,
                "name": "io.vertx.core.cli.TypedOption.setChoicesFromEnumType()"
              },
              {
                "cyclomatic_complexity": 8,
                "javadocs": 0,
                "name": "io.vertx.core.cli.ArgumentConverter.fromJson(JsonObject,Argument)"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.cli.ArgumentConverter.toJson(Argument,JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.impl.DatagramPacketImpl.DatagramPacketImpl(InetSocketAddress,Buffer)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.impl.DatagramPacketImpl.sender()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.impl.DatagramPacketImpl.data()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.impl.PacketWriteStreamImpl.PacketWriteStreamImpl(DatagramSocketImpl,int,String)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.impl.PacketWriteStreamImpl.handle(DatagramSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.impl.PacketWriteStreamImpl.exceptionHandler(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.impl.PacketWriteStreamImpl.write(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.impl.PacketWriteStreamImpl.setWriteQueueMaxSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.impl.PacketWriteStreamImpl.writeQueueFull()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.impl.PacketWriteStreamImpl.drainHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.impl.PacketWriteStreamImpl.end()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramPacket.sender()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramPacket.data()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocket.send(Buffer,int,String,DatagramSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocket.sender(int,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocket.send(String,int,String,DatagramSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocket.send(String,String,int,String,DatagramSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocket.close(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocket.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocket.localAddress()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocket.listenMulticastGroup(String,DatagramSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocket.listenMulticastGroup(String,String,String,DatagramSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocket.unlistenMulticastGroup(String,DatagramSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocket.unlistenMulticastGroup(String,String,String,DatagramSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocket.blockMulticastGroup(String,String,DatagramSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocket.blockMulticastGroup(String,String,String,DatagramSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocket.listen(int,String,DatagramSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocket.pause()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocket.resume()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocket.endHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocket.handler(DatagramPacket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocket.exceptionHandler(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.DatagramSocketOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.DatagramSocketOptions(DatagramSocketOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.DatagramSocketOptions(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.init()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.getSendBufferSize()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.setSendBufferSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.getReceiveBufferSize()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.setReceiveBufferSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.setReuseAddress(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.getTrafficClass()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.setTrafficClass(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.isBroadcast()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.setBroadcast(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.isLoopbackModeDisabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.setLoopbackModeDisabled(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.getMulticastTimeToLive()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.setMulticastTimeToLive(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.getMulticastNetworkInterface()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.setMulticastNetworkInterface(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.isIpV6()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.setIpV6(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.setLogActivity(boolean)"
              },
              {
                "cyclomatic_complexity": 18,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.equals(Object)"
              },
              {
                "cyclomatic_complexity": 5,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocketOptions.hashCode()"
              },
              {
                "cyclomatic_complexity": 6,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocketOptionsConverter.fromJson(JsonObject,DatagramSocketOptions)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.DatagramSocketOptionsConverter.toJson(DatagramSocketOptions,JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.impl.decoder.StartOfAuthorityRecord.StartOfAuthorityRecord(String,String,long,int,int,int,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.impl.decoder.StartOfAuthorityRecord.primaryNameServer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.impl.decoder.StartOfAuthorityRecord.responsiblePerson()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.impl.decoder.StartOfAuthorityRecord.serial()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.impl.decoder.StartOfAuthorityRecord.refreshTime()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.impl.decoder.StartOfAuthorityRecord.retryTime()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.impl.decoder.StartOfAuthorityRecord.expireTime()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.impl.decoder.StartOfAuthorityRecord.minimumTtl()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.impl.MxRecordImpl.MxRecordImpl(int,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.impl.MxRecordImpl.priority()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.impl.MxRecordImpl.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.impl.MxRecordImpl.toString()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.impl.MxRecordImpl.compareTo(MxRecord)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.impl.SrvRecordImpl.SrvRecordImpl(int,int,int,String,String,String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.impl.SrvRecordImpl.priority()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.impl.SrvRecordImpl.weight()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.impl.SrvRecordImpl.port()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.impl.SrvRecordImpl.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.impl.SrvRecordImpl.protocol()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.impl.SrvRecordImpl.service()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.impl.SrvRecordImpl.target()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.impl.SrvRecordImpl.compareTo(SrvRecord)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.DnsException.DnsException(DnsResponseCode)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.DnsException.code()"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.dns.DnsResponseCode.valueOf(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.DnsResponseCode.DnsResponseCode(int,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.DnsResponseCode.code()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.dns.DnsResponseCode.toString()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.MxRecord.priority()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.MxRecord.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.SrvRecord.priority()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.SrvRecord.weight()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.SrvRecord.port()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.SrvRecord.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.SrvRecord.protocol()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.SrvRecord.service()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.dns.SrvRecord.target()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.clustered.ClusterNodeInfo.ClusterNodeInfo()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.clustered.ClusterNodeInfo.ClusterNodeInfo(String,ServerID)"
              },
              {
                "cyclomatic_complexity": 10,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.clustered.ClusterNodeInfo.equals(Object)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.clustered.ClusterNodeInfo.hashCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.clustered.ClusterNodeInfo.toString()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.BooleanMessageCodec.encodeToWire(Buffer,Boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.BooleanMessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.BooleanMessageCodec.transform(Boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.BooleanMessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.BooleanMessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.BufferMessageCodec.encodeToWire(Buffer,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.BufferMessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.BufferMessageCodec.transform(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.BufferMessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.BufferMessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ByteArrayMessageCodec.encodeToWire(Buffer,Buffer[])"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ByteArrayMessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ByteArrayMessageCodec.transform(Override[][])"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ByteArrayMessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ByteArrayMessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ByteMessageCodec.encodeToWire(Buffer,Byte)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ByteMessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ByteMessageCodec.transform(Byte)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ByteMessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ByteMessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.CharMessageCodec.encodeToWire(Buffer,Character)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.CharMessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.CharMessageCodec.transform(Character)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.CharMessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.CharMessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.DoubleMessageCodec.encodeToWire(Buffer,Double)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.DoubleMessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.DoubleMessageCodec.transform(Double)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.DoubleMessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.DoubleMessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.FloatMessageCodec.encodeToWire(Buffer,Float)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.FloatMessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.FloatMessageCodec.transform(Float)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.FloatMessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.FloatMessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.IntMessageCodec.encodeToWire(Buffer,Integer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.IntMessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.IntMessageCodec.transform(Integer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.IntMessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.IntMessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.JsonArrayMessageCodec.encodeToWire(Buffer,JsonArray)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.JsonArrayMessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.JsonArrayMessageCodec.transform(JsonArray)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.JsonArrayMessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.JsonArrayMessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.JsonObjectMessageCodec.encodeToWire(Buffer,JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.JsonObjectMessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.JsonObjectMessageCodec.transform(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.JsonObjectMessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.JsonObjectMessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.LongMessageCodec.encodeToWire(Buffer,Long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.LongMessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.LongMessageCodec.transform(Long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.LongMessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.LongMessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.NullMessageCodec.encodeToWire(Buffer,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.NullMessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.NullMessageCodec.transform(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.NullMessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.NullMessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.PingMessageCodec.encodeToWire(Buffer,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.PingMessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.PingMessageCodec.transform(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.PingMessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.PingMessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ReplyExceptionMessageCodec.encodeToWire(Buffer,ReplyException)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ReplyExceptionMessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ReplyExceptionMessageCodec.transform(ReplyException)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ReplyExceptionMessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ReplyExceptionMessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ShortMessageCodec.encodeToWire(Buffer,Short)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ShortMessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ShortMessageCodec.transform(Short)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ShortMessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.ShortMessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.StringMessageCodec.encodeToWire(Buffer,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.StringMessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.StringMessageCodec.transform(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.StringMessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.codecs.StringMessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.HandlerHolder.HandlerHolder(EventBusMetrics,T,boolean,boolean,Context)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.HandlerHolder.setRemoved()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.HandlerHolder.isRemoved()"
              },
              {
                "cyclomatic_complexity": 9,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.HandlerHolder.equals(Object)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.HandlerHolder.hashCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.HandlerHolder.getContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.HandlerHolder.getHandler()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.HandlerHolder.isReplyHandler()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.impl.HandlerHolder.isLocalOnly()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.BridgeInterceptor.BridgeInterceptor(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.BridgeInterceptor.handleContext(SendContext)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.DeliveryOptions.DeliveryOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.DeliveryOptions.DeliveryOptions(DeliveryOptions)"
              },
              {
                "cyclomatic_complexity": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.DeliveryOptions.DeliveryOptions(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.DeliveryOptions.getSendTimeout()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.DeliveryOptions.setSendTimeout(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.DeliveryOptions.getCodecName()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.DeliveryOptions.setCodecName(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.DeliveryOptions.addHeader(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.DeliveryOptions.setHeaders(MultiMap)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.DeliveryOptions.getHeaders()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.DeliveryOptions.checkHeaders()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBus.send(String,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBus.send(String,Object,T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBus.send(String,Object,DeliveryOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBus.send(String,Object,DeliveryOptions,T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBus.publish(String,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBus.publish(String,Object,DeliveryOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBus.consumer(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBus.consumer(String,T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBus.localConsumer(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBus.localConsumer(String,T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBus.sender(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBus.sender(String,DeliveryOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBus.publisher(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBus.publisher(String,DeliveryOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBus.registerCodec(MessageCodec)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBus.unregisterCodec(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBus.registerDefaultCodec(T,T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBus.unregisterDefaultCodec(Class)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBus.start(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBus.close(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBus.addInterceptor(SendContext)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBus.removeInterceptor(SendContext)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.EventBusOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.EventBusOptions(EventBusOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.EventBusOptions(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.toJson()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.getClientAuth()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.setClientAuth(ClientAuth)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.getAcceptBacklog()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.setAcceptBacklog(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.getHost()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.setHost(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.getPort()"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.setPort(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.getReconnectAttempts()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.setReconnectAttempts(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.getReconnectInterval()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.setReconnectInterval(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.addCrlPath(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.addCrlValue(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.addEnabledCipherSuite(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setIdleTimeout(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setKeyCertOptions(KeyCertOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setKeyStoreOptions(JksOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setPemKeyCertOptions(PemKeyCertOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setPemTrustOptions(PemTrustOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setPfxKeyCertOptions(PfxOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setPfxTrustOptions(PfxOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setSoLinger(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setSsl(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setTcpKeepAlive(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setTcpNoDelay(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setTrustOptions(TrustOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setTrustStoreOptions(JksOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setUsePooledBuffers(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setReceiveBufferSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setReuseAddress(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setSendBufferSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.EventBusOptions.setTrafficClass(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.isClustered()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.setClustered(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.setTrustAll(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.isTrustAll()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.getConnectTimeout()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.setConnectTimeout(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.getClusterPingInterval()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.setClusterPingInterval(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.getClusterPingReplyInterval()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.setClusterPingReplyInterval(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.getClusterPublicHost()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.setClusterPublicHost(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.getClusterPublicPort()"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.EventBusOptions.setClusterPublicPort(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.FilteringInterceptor.FilteringInterceptor(String)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.FilteringInterceptor.handle(SendContext)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.FilteringInterceptor.handleContext(SendContext)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.Message.address()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.Message.headers()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.Message.body()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.Message.replyAddress()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.Message.isSend()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.Message.reply(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.Message.reply(Object,R)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.Message.reply(Object,DeliveryOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.Message.reply(Object,DeliveryOptions,R)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.Message.fail(int,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageCodec.encodeToWire(Buffer,S)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageCodec.decodeFromWire(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageCodec.transform(S)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageCodec.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageCodec.systemCodecID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.MessageConsumer.exceptionHandler(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.MessageConsumer.handler(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.MessageConsumer.pause()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.MessageConsumer.resume()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.MessageConsumer.endHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageConsumer.bodyStream()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageConsumer.isRegistered()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageConsumer.address()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageConsumer.setMaxBufferedMessages(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageConsumer.getMaxBufferedMessages()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageConsumer.completionHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageConsumer.unregister()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageConsumer.unregister(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageProducer.send(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.MessageProducer.send(T,R)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.MessageProducer.exceptionHandler(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.MessageProducer.write(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.MessageProducer.setWriteQueueMaxSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.MessageProducer.drainHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageProducer.deliveryOptions(DeliveryOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageProducer.address()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageProducer.end()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.MessageProducer.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.ReplyException.ReplyException(ReplyFailure,int,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.ReplyException.ReplyException(ReplyFailure,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.ReplyException.ReplyException(ReplyFailure)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.ReplyException.failureType()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.ReplyException.failureCode()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.ReplyException.toString()"
              },
              {
                "cyclomatic_complexity": 8,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.ReplyFailure.fromInt(int)"
              },
              {
                "cyclomatic_complexity": 8,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.ReplyFailure.toInt()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.SendContext.message()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.SendContext.next()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.SendContext.send()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.FilePropsImpl.FilePropsImpl(BasicFileAttributes)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.FilePropsImpl.creationTime()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.FilePropsImpl.lastAccessTime()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.FilePropsImpl.lastModifiedTime()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.FilePropsImpl.isDirectory()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.FilePropsImpl.isOther()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.FilePropsImpl.isRegularFile()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.FilePropsImpl.isSymbolicLink()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.FilePropsImpl.size()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.FileSystemPropsImpl.FileSystemPropsImpl(long,long,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.FileSystemPropsImpl.totalSpace()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.FileSystemPropsImpl.unallocatedSpace()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.FileSystemPropsImpl.usableSpace()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.WindowsFileSystem.WindowsFileSystem(VertxInternal)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.WindowsFileSystem.logInternal(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.WindowsFileSystem.BlockingAction.perform()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.WindowsFileSystem.chmodInternal(String,String,String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.WindowsFileSystem.mkdirInternal(String,String,boolean,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.WindowsFileSystem.doOpen(String,OpenOptions,ContextImpl)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.WindowsFileSystem.createFileInternal(String,String,Void)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.WindowsFileSystem.chownInternal(String,String,String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.AsyncFile.handler(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.AsyncFile.pause()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.AsyncFile.resume()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.AsyncFile.endHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.AsyncFile.write(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.AsyncFile.setWriteQueueMaxSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.AsyncFile.drainHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.AsyncFile.exceptionHandler(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.AsyncFile.end()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.AsyncFile.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.AsyncFile.close(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.AsyncFile.write(Buffer,long,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.AsyncFile.read(Buffer,int,long,int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.AsyncFile.flush()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.AsyncFile.flush(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.AsyncFile.setReadPos(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.AsyncFile.setWritePos(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.AsyncFile.setReadBufferSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileProps.creationTime()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileProps.lastAccessTime()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileProps.lastModifiedTime()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileProps.isDirectory()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileProps.isOther()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileProps.isRegularFile()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileProps.isSymbolicLink()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileProps.size()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.copy(String,String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.copyBlocking(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.copyRecursive(String,String,boolean,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.copyRecursiveBlocking(String,String,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.move(String,String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.moveBlocking(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.truncate(String,long,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.truncateBlocking(String,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.chmod(String,String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.chmodBlocking(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.chmodRecursive(String,String,String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.chmodRecursiveBlocking(String,String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.chown(String,String,String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.chownBlocking(String,String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.props(String,FileProps)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.propsBlocking(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.lprops(String,FileProps)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.lpropsBlocking(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.link(String,String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.linkBlocking(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.symlink(String,String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.symlinkBlocking(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.unlink(String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.unlinkBlocking(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.readSymlink(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.readSymlinkBlocking(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.delete(String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.deleteBlocking(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.deleteRecursive(String,boolean,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.deleteRecursiveBlocking(String,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.mkdir(String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.mkdirBlocking(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.mkdir(String,String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.mkdirBlocking(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.mkdirs(String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.mkdirsBlocking(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.mkdirs(String,String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.mkdirsBlocking(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.readDir(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.readDirBlocking(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.readDir(String,String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.readDirBlocking(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.readFile(String,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.readFileBlocking(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.writeFile(String,Buffer,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.writeFileBlocking(String,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.open(String,OpenOptions,AsyncFile)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.openBlocking(String,OpenOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.createFile(String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.createFileBlocking(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.createFile(String,String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.createFileBlocking(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.exists(String,Boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.existsBlocking(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.fsProps(String,FileSystemProps)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystem.fsPropsBlocking(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.FileSystemException.FileSystemException(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.FileSystemException.FileSystemException(String,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.FileSystemException.FileSystemException(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystemProps.totalSpace()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystemProps.unallocatedSpace()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystemProps.usableSpace()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.OpenOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.OpenOptions(OpenOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.OpenOptions(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.getPerms()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.setPerms(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.isRead()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.setRead(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.isWrite()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.setWrite(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.isCreate()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.setCreate(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.isCreateNew()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.setCreateNew(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.isDeleteOnClose()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.setDeleteOnClose(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.isTruncateExisting()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.setTruncateExisting(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.isSparse()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.setSparse(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.isSync()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.setSync(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.isDsync()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptions.setDsync(boolean)"
              },
              {
                "cyclomatic_complexity": 11,
                "javadocs": 0,
                "name": "io.vertx.core.file.OpenOptionsConverter.fromJson(JsonObject,OpenOptions)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.file.OpenOptionsConverter.toJson(OpenOptions,JsonObject)"
              },
              {
                "cyclomatic_complexity": 10,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler.channelRead(ChannelHandlerContext,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.WebSocketFrameImpl()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.WebSocketFrameImpl(FrameType)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.WebSocketFrameImpl(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.WebSocketFrameImpl(String,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.WebSocketFrameImpl(FrameType,ByteBuf)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.WebSocketFrameImpl(FrameType,ByteBuf,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.isText()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.isBinary()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.isContinuation()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.getBinaryData()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.textData()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.binaryData()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.setBinaryData(ByteBuf)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.setTextData(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.toString()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.refCnt()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.retain()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.retain(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.release()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.release(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.touch()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.touch(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.isFinal()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl.type()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameInternal.getBinaryData()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameInternal.setBinaryData(ByteBuf)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameInternal.setTextData(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameInternal.type()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest.AssembledFullHttpRequest(HttpRequest,LastHttpContent)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest.AssembledFullHttpRequest(HttpRequest)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest.AssembledFullHttpRequest(HttpRequest,ByteBuf)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest.toLastContent(ByteBuf)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest.replace(ByteBuf)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest.retainedDuplicate()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest.setUri(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest.setProtocolVersion(HttpVersion)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest.setMethod(HttpMethod)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest.duplicate()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest.copy()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest.trailingHeaders()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest.retain()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest.retain(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest.touch(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest.touch()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse.AssembledFullHttpResponse(HttpResponse,LastHttpContent)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse.AssembledFullHttpResponse(HttpResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse.AssembledFullHttpResponse(HttpResponse,ByteBuf)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse.AssembledFullHttpResponse(HttpResponse,ByteBuf,HttpHeaders,DecoderResult)"
              },
              {
                "cyclomatic_complexity": 7,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse.toLastContent(ByteBuf,HttpHeaders,DecoderResult)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse.setStatus(HttpResponseStatus)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse.retain(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse.retain()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse.duplicate()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse.copy()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse.retainedDuplicate()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse.replace(ByteBuf)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse.setProtocolVersion(HttpVersion)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse.trailingHeaders()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse.touch()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse.touch(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.AssembledHttpRequest(HttpRequest,ByteBuf)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.AssembledHttpRequest(HttpRequest,HttpContent)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.copy()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.duplicate()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.retainedDuplicate()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.replace(ByteBuf)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.retain()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.retain(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.touch(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.touch()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.method()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.getMethod()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.uri()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.getUri()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.headers()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.setMethod(HttpMethod)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.protocolVersion()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.getProtocolVersion()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.setUri(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.setProtocolVersion(HttpVersion)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.decoderResult()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.getDecoderResult()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.setDecoderResult(DecoderResult)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.content()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.refCnt()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.release()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest.release(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.AssembledHttpResponse(HttpResponse,HttpContent)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.AssembledHttpResponse(HttpResponse,ByteBuf)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.copy()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.duplicate()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.retainedDuplicate()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.replace(ByteBuf)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.retain()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.retain(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.getStatus()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.setStatus(HttpResponseStatus)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.setProtocolVersion(HttpVersion)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.getProtocolVersion()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.protocolVersion()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.status()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.touch()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.touch(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.decoderResult()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.headers()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.getDecoderResult()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.setDecoderResult(DecoderResult)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.content()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.refCnt()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.release()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse.release(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledLastHttpContent.AssembledLastHttpContent(ByteBuf,HttpHeaders,DecoderResult)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledLastHttpContent.trailingHeaders()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledLastHttpContent.copy()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledLastHttpContent.retain(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledLastHttpContent.retain()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledLastHttpContent.duplicate()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledLastHttpContent.replace(ByteBuf)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledLastHttpContent.retainedDuplicate()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledLastHttpContent.decoderResult()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledLastHttpContent.getDecoderResult()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledLastHttpContent.setDecoderResult(DecoderResult)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledLastHttpContent.touch()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.AssembledLastHttpContent.touch(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ClientHandler.ClientHandler(Channel,ContextImpl,ClientConnection)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ClientHandler.getContext(ClientConnection)"
              },
              {
                "cyclomatic_complexity": 20,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ClientHandler.doMessageReceived(ClientConnection,ChannelHandlerContext,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.HeadersAdaptor(HttpHeaders)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.get(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.getAll(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.entries()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.contains(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.isEmpty()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.names()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.add(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.add(String,String)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.addAll(MultiMap)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.addAll(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.set(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.set(String,String)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.setAll(MultiMap)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.remove(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.clear()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.iterator()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.size()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.setAll(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.get(CharSequence)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.getAll(CharSequence)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.contains(CharSequence)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.add(CharSequence,CharSequence)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.add(CharSequence,CharSequence)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.set(CharSequence,CharSequence)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.set(CharSequence,CharSequence)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HeadersAdaptor.remove(CharSequence)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpChunkContentCompressor.write(ChannelHandlerContext,Object,ChannelPromise)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpChunkContentCompressor.HttpChunkContentCompressor(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientConnection.getContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientConnection.reportBytesWritten(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientConnection.reportBytesRead(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.HttpClientConnection.isValid()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientConnection.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.HttpClientRequestPushPromise(Http2ClientConnection,Http2Stream,HttpClientImpl,boolean,HttpMethod,String,String,String,int,MultiMap)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.getStream()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.getLock()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.doHandleResponse(HttpClientResponseImpl,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.checkComplete()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.handler(HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.connection()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.connectionHandler(HttpConnection)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.reset(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.isChunked()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.method()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.getRawMethod()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.setRawMethod(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.uri()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.getHost()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.headers()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.write(Buffer)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.setWriteQueueMaxSize(int)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.drainHandler(Void)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.pause()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.resume()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.endHandler(Void)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.setFollowRedirects(boolean)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.setChunked(boolean)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.setHost(String)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.putHeader(String,String)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.putHeader(CharSequence,CharSequence)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.putHeader(String,String)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.putHeader(CharSequence,CharSequence)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.write(String)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.write(String,String)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.continueHandler(Void)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.sendHead()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.sendHead(HttpVersion)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.end(String)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.end(String,String)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.end(Buffer)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.pushHandler(HttpClientRequest)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.end()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.writeQueueFull()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise.writeCustomFrame(int,int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.HttpClientStream.id()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.HttpClientStream.version()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientStream.connection()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientStream.getContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientStream.writeHead(HttpMethod,String,String,MultiMap,String,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientStream.writeHeadWithContent(HttpMethod,String,String,MultiMap,String,boolean,ByteBuf,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientStream.writeBuffer(ByteBuf,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientStream.writeFrame(int,int,ByteBuf)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientStream.doSetWriteQueueMaxSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientStream.isNotWritable()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientStream.checkDrained()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientStream.doPause()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientStream.doResume()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientStream.resetRequest(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientStream.resetResponse(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientStream.beginRequest(HttpClientRequestImpl)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientStream.endRequest()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpClientStream.createNetSocket()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpFrameImpl.HttpFrameImpl(int,int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpFrameImpl.flags()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpFrameImpl.type()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.HttpFrameImpl.payload()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.NettyFileUpload(HttpServerFileUploadImpl,String,String,String,String,Charset)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.setContent(ByteBuf)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.addContent(ByteBuf,boolean)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.setContent(File)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.setContent(InputStream)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.isCompleted()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.length()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.delete()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.definedLength()"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.checkSize(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.getMaxSize()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.setMaxSize(long)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.get()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.getChunk(int)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.getString()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.getString(Charset)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.setCharset(Charset)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.getCharset()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.renameTo(File)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.isInMemory()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.getFile()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.getName()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.getHttpDataType()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.compareTo(InterfaceHttpData)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.getFilename()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.setFilename(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.setContentType(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.getContentType()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.setContentTransferEncoding(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.getContentTransferEncoding()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.getByteBuf()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.copy()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.duplicate()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.retainedDuplicate()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.replace(ByteBuf)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.retain()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.retain(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.touch(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.touch()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.content()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.refCnt()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.release()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUpload.release(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUploadDataFactory.NettyFileUploadDataFactory(Vertx,HttpServerRequest,HttpServerFileUpload)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.NettyFileUploadDataFactory.createFileUpload(HttpRequest,String,String,String,String,Charset,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ServerWebSocketImpl.ServerWebSocketImpl(VertxInternal,String,String,String,MultiMap,ConnectionBase,boolean,Runnable,int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ServerWebSocketImpl.uri()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ServerWebSocketImpl.path()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ServerWebSocketImpl.query()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ServerWebSocketImpl.headers()"
              },
              {
                "cyclomatic_complexity": 5,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ServerWebSocketImpl.reject()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ServerWebSocketImpl.peerCertificateChain()"
              },
              {
                "cyclomatic_complexity": 6,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ServerWebSocketImpl.close()"
              },
              {
                "cyclomatic_complexity": 6,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ServerWebSocketImpl.writeFrame(WebSocketFrame)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ServerWebSocketImpl.connect()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ServerWebSocketImpl.connectNow()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.ServerWebSocketImpl.isRejected()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.VertxHttp2ClientUpgradeCodec.VertxHttp2ClientUpgradeCodec(io.vertx.core.http.Http2Settings)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.VertxHttp2ClientUpgradeCodec.protocol()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.VertxHttp2ClientUpgradeCodec.setUpgradeHeaders(ChannelHandlerContext,HttpRequest)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.VertxHttp2ClientUpgradeCodec.upgradeTo(ChannelHandlerContext,FullHttpResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.VertxHttpResponseEncoder.encode(ChannelHandlerContext,Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.VertxHttpResponseEncoder.handlerAdded(ChannelHandlerContext)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.Waiter.Waiter(HttpClientRequestImpl,ContextImpl)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.Waiter.handleFailure(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.Waiter.handleConnection(HttpClientConnection)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.Waiter.handleStream(HttpClientStream)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.Waiter.isCancelled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.WebSocketFrameFactoryImpl.binaryFrame(Buffer,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.WebSocketFrameFactoryImpl.textFrame(String,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.WebSocketFrameFactoryImpl.continuationFrame(Buffer,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.WebSocketImpl.WebSocketImpl(VertxInternal,ClientConnection,boolean,int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.WebSocketImpl.handleClosed()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.ConnectionPoolTooBusyException.ConnectionPoolTooBusyException(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.GoAway.GoAway()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.GoAway.GoAway(JsonObject)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.GoAway.GoAway(GoAway)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.GoAway.getErrorCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.GoAway.setErrorCode(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.GoAway.getLastStreamId()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.GoAway.setLastStreamId(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.GoAway.getDebugData()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.GoAway.setDebugData(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.GoAway.toJson()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.request(HttpMethod,RequestOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.request(HttpMethod,int,String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.request(HttpMethod,String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.request(HttpMethod,RequestOptions,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.request(HttpMethod,int,String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.request(HttpMethod,String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.request(HttpMethod,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.request(HttpMethod,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.requestAbs(HttpMethod,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.requestAbs(HttpMethod,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.get(RequestOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.get(int,String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.get(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.get(RequestOptions,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.get(int,String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.get(String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.get(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.get(String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.getAbs(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.getAbs(String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.getNow(RequestOptions,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.getNow(int,String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.getNow(String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.getNow(String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.post(RequestOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.post(int,String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.post(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.post(RequestOptions,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.post(int,String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.post(String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.post(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.post(String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.postAbs(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.postAbs(String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.head(RequestOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.head(int,String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.head(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.head(RequestOptions,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.head(int,String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.head(String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.head(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.head(String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.headAbs(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.headAbs(String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.headNow(RequestOptions,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.headNow(int,String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.headNow(String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.headNow(String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.options(RequestOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.options(int,String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.options(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.options(RequestOptions,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.options(int,String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.options(String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.options(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.options(String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.optionsAbs(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.optionsAbs(String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.optionsNow(RequestOptions,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.optionsNow(int,String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.optionsNow(String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.optionsNow(String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.put(RequestOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.put(int,String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.put(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.put(RequestOptions,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.put(int,String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.put(String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.put(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.put(String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.putAbs(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.putAbs(String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.delete(RequestOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.delete(int,String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.delete(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.delete(RequestOptions,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.delete(int,String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.delete(String,String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.delete(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.delete(String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.deleteAbs(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.deleteAbs(String,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(RequestOptions,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(int,String,String,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(RequestOptions,WebSocket,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(int,String,String,WebSocket,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(String,String,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(String,String,WebSocket,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(RequestOptions,MultiMap,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(int,String,String,MultiMap,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(RequestOptions,MultiMap,WebSocket,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(int,String,String,MultiMap,WebSocket,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(String,String,MultiMap,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(String,String,MultiMap,WebSocket,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(RequestOptions,MultiMap,WebsocketVersion,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(int,String,String,MultiMap,WebsocketVersion,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(RequestOptions,MultiMap,WebsocketVersion,WebSocket,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(int,String,String,MultiMap,WebsocketVersion,WebSocket,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(String,String,MultiMap,WebsocketVersion,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(String,String,MultiMap,WebsocketVersion,WebSocket,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(RequestOptions,MultiMap,WebsocketVersion,String,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(int,String,String,MultiMap,WebsocketVersion,String,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(RequestOptions,MultiMap,WebsocketVersion,String,WebSocket,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(int,String,String,MultiMap,WebsocketVersion,String,WebSocket,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(String,String,MultiMap,WebsocketVersion,String,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(String,String,MultiMap,WebsocketVersion,String,WebSocket,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(String,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(String,WebSocket,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(String,MultiMap,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(String,MultiMap,WebSocket,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(String,MultiMap,WebsocketVersion,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(String,MultiMap,WebsocketVersion,WebSocket,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(String,MultiMap,WebsocketVersion,String,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocket(String,MultiMap,WebsocketVersion,String,WebSocket,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocketStream(RequestOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocketStream(int,String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocketStream(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocketStream(RequestOptions,MultiMap)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocketStream(int,String,String,MultiMap)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocketStream(String,String,MultiMap)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocketStream(RequestOptions,MultiMap,WebsocketVersion)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocketStream(int,String,String,MultiMap,WebsocketVersion)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocketStream(String,String,MultiMap,WebsocketVersion)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocketStream(RequestOptions,MultiMap,WebsocketVersion,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocketStream(int,String,String,MultiMap,WebsocketVersion,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocketStream(String,String,MultiMap,WebsocketVersion,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocketStream(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocketStream(String,MultiMap)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocketStream(String,MultiMap,WebsocketVersion)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.websocketStream(String,MultiMap,WebsocketVersion,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.redirectHandler(HttpClientRequest)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.redirectHandler()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClient.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.HttpClientResponse.resume()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.HttpClientResponse.exceptionHandler(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.HttpClientResponse.handler(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.HttpClientResponse.pause()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.HttpClientResponse.endHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClientResponse.version()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClientResponse.statusCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClientResponse.statusMessage()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClientResponse.headers()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClientResponse.getHeader(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClientResponse.getHeader(CharSequence)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClientResponse.getTrailer(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClientResponse.trailers()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClientResponse.cookies()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClientResponse.bodyHandler(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClientResponse.customFrameHandler(HttpFrame)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClientResponse.netSocket()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpClientResponse.request()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpFrame.type()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpFrame.flags()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpFrame.payload()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpHeaders.createOptimized(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.HttpHeaders.HttpHeaders()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServer.requestStream()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServer.requestHandler(HttpServerRequest)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServer.requestHandler()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServer.connectionHandler(HttpConnection)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServer.websocketStream()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServer.websocketHandler(ServerWebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServer.websocketHandler()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServer.listen()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServer.listen(int,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServer.listen(int,String,HttpServer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServer.listen(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServer.listen(int,HttpServer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServer.listen(HttpServer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServer.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServer.close(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServer.actualPort()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.HttpServerFileUpload.exceptionHandler(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.HttpServerFileUpload.handler(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.HttpServerFileUpload.endHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.HttpServerFileUpload.pause()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.HttpServerFileUpload.resume()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServerFileUpload.streamToFileSystem(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServerFileUpload.filename()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServerFileUpload.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServerFileUpload.contentType()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServerFileUpload.contentTransferEncoding()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServerFileUpload.charset()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServerFileUpload.size()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.HttpServerFileUpload.isSizeAvailable()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.RequestOptions.RequestOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.RequestOptions.RequestOptions(RequestOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.RequestOptions.RequestOptions(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.RequestOptions.getHost()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.RequestOptions.setHost(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.RequestOptions.getPort()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.RequestOptions.setPort(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.RequestOptions.isSsl()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.RequestOptions.setSsl(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.RequestOptions.getURI()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.RequestOptions.setURI(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.ServerWebSocket.exceptionHandler(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.ServerWebSocket.handler(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.ServerWebSocket.pause()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.ServerWebSocket.resume()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.ServerWebSocket.endHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.ServerWebSocket.write(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.ServerWebSocket.setWriteQueueMaxSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.ServerWebSocket.drainHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.ServerWebSocket.writeFrame(WebSocketFrame)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.ServerWebSocket.writeFinalTextFrame(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.ServerWebSocket.writeFinalBinaryFrame(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.ServerWebSocket.writeBinaryMessage(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.ServerWebSocket.closeHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.ServerWebSocket.frameHandler(WebSocketFrame)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.ServerWebSocket.uri()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.ServerWebSocket.path()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.ServerWebSocket.query()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.ServerWebSocket.headers()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.ServerWebSocket.reject()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.ServerWebSocket.peerCertificateChain()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.StreamResetException.StreamResetException(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.StreamResetException.getCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocket.exceptionHandler(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocket.handler(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocket.pause()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocket.resume()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocket.endHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocket.write(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocket.setWriteQueueMaxSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocket.drainHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocket.writeFrame(WebSocketFrame)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocket.writeFinalTextFrame(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocket.writeFinalBinaryFrame(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocket.writeBinaryMessage(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocket.writeTextMessage(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocket.closeHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocket.frameHandler(WebSocketFrame)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocketBase.exceptionHandler(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocketBase.handler(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocketBase.pause()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocketBase.resume()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocketBase.endHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocketBase.write(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocketBase.setWriteQueueMaxSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebSocketBase.drainHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketBase.binaryHandlerID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketBase.textHandlerID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketBase.writeFrame(WebSocketFrame)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketBase.writeFinalTextFrame(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketBase.writeFinalBinaryFrame(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketBase.writeBinaryMessage(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketBase.writeTextMessage(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketBase.closeHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketBase.frameHandler(WebSocketFrame)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketBase.textMessageHandler(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketBase.binaryMessageHandler(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketBase.end()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketBase.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketBase.remoteAddress()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketBase.localAddress()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketFrame.binaryFrame(Buffer,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketFrame.textFrame(String,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketFrame.continuationFrame(Buffer,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketFrame.isText()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketFrame.isBinary()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketFrame.isContinuation()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketFrame.textData()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketFrame.binaryData()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocketFrame.isFinal()"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.http.GoAwayConverter.fromJson(JsonObject,GoAway)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.http.GoAwayConverter.toJson(GoAway,JsonObject)"
              },
              {
                "cyclomatic_complexity": 7,
                "javadocs": 0,
                "name": "io.vertx.core.http.Http2SettingsConverter.fromJson(JsonObject,Http2Settings)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.http.Http2SettingsConverter.toJson(Http2Settings,JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.commands.BareCommandFactory.BareCommandFactory()"
              },
              {
                "cyclomatic_complexity": 12,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.commands.ExecUtils.quoteArgument(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.commands.ExecUtils.addArgument(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.commands.ExecUtils.isWindows()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.commands.ExecUtils.isLinux()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.commands.ExecUtils.exit(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.commands.ExecUtils.exitBecauseOfVertxInitializationIssue()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.commands.ExecUtils.exitBecauseOfVertxDeploymentIssue()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.commands.ExecUtils.exitBecauseOfProcessIssue()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.commands.ExecUtils.exitBecauseOfSystemConfigurationIssue()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.commands.ListCommandFactory.ListCommandFactory()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.commands.RunCommandFactory.RunCommandFactory()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.commands.StartCommandFactory.StartCommandFactory()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.commands.StopCommandFactory.StopCommandFactory()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.commands.VersionCommandFactory.VersionCommandFactory()"
              },
              {
                "cyclomatic_complexity": 8,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.CommandLineUtils.getJar()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.CommandLineUtils.getCommand()"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.CommandLineUtils.getFirstSegmentOfCommand()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.VertxLifecycleHooks.afterConfigParsed(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.VertxLifecycleHooks.beforeStartingVertx(VertxOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.VertxLifecycleHooks.afterStartingVertx(Vertx)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.VertxLifecycleHooks.beforeDeployingVerticle(DeploymentOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.launcher.VertxLifecycleHooks.handleDeployFailed(Vertx,String,DeploymentOptions,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject.CustomJavaFileObject(URI,Kind,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject.binaryName()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject.openInputStream()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject.getKind()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject.getNestingKind()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject.toUri()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject.getName()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject.openOutputStream()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject.openReader(boolean)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject.getCharContent(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject.openWriter()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject.getLastModified()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject.delete()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject.isNameCompatible(String,Kind)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject.getAccessLevel()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject.toString()"
              },
              {
                "cyclomatic_complexity": 6,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.JavaSourceContext.JavaSourceContext(File)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.JavaSourceContext.getSourceRoot()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.JavaSourceContext.getClassName()"
              },
              {
                "cyclomatic_complexity": 9,
                "javadocs": 0,
                "name": "io.vertx.core.impl.verticle.JavaSourceContext.parsePackage(File)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.Action.perform()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.impl.Arguments.require(boolean,String)"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 1,
                "name": "io.vertx.core.impl.Arguments.requireInRange(int,int,int,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.ContextInternal.nettyEventLoop()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.ContextInternal.createWorkerExecutor()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.ContextInternal.executeFromIO(ContextTask)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.ContextTask.run()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.Deployment.addChild(Deployment)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.Deployment.removeChild(Deployment)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.Deployment.undeploy(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.Deployment.doUndeploy(ContextImpl,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.Deployment.deploymentID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.Deployment.verticleIdentifier()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.Deployment.deploymentOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.Deployment.getVerticles()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.Deployment.isChild()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.EventLoopContext.EventLoopContext(VertxInternal,WorkerPool,WorkerPool,String,JsonObject,ClassLoader)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.EventLoopContext.executeAsync(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.EventLoopContext.isEventLoopContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.EventLoopContext.isMultiThreadedWorkerContext()"
              },
              {
                "cyclomatic_complexity": 6,
                "javadocs": 0,
                "name": "io.vertx.core.impl.EventLoopContext.checkCorrectThread()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.ExtendedClusterManager.beforeLeave()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.FailoverCompleteHandler.handle(String,JsonObject,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.FutureImpl.FutureImpl()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 1,
                "name": "io.vertx.core.impl.FutureImpl.FutureImpl(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.FutureImpl.FutureImpl(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.FutureImpl.FutureImpl(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.FutureImpl.result()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.FutureImpl.cause()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.FutureImpl.succeeded()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.FutureImpl.failed()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 1,
                "name": "io.vertx.core.impl.FutureImpl.isComplete()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.FutureImpl.setHandler(T)"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.impl.FutureImpl.complete(T)"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.impl.FutureImpl.complete()"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.impl.FutureImpl.fail(Throwable)"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.impl.FutureImpl.fail(String)"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.impl.FutureImpl.tryComplete(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.FutureImpl.tryComplete()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.impl.FutureImpl.handle(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.FutureImpl.completer()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.impl.FutureImpl.handle(T)"
              },
              {
                "cyclomatic_complexity": 5,
                "javadocs": 0,
                "name": "io.vertx.core.impl.FutureImpl.tryFail(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.FutureImpl.tryFail(String)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.impl.FutureImpl.checkCallHandler()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.IsolatingClassLoader.IsolatingClassLoader(URL[],ClassLoader,String)"
              },
              {
                "cyclomatic_complexity": 8,
                "javadocs": 0,
                "name": "io.vertx.core.impl.IsolatingClassLoader.loadClass(String,boolean)"
              },
              {
                "cyclomatic_complexity": 8,
                "javadocs": 0,
                "name": "io.vertx.core.impl.IsolatingClassLoader.isIsolatedClass(String)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 1,
                "name": "io.vertx.core.impl.IsolatingClassLoader.getResource(String)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.impl.IsolatingClassLoader.getResources(String)"
              },
              {
                "cyclomatic_complexity": 7,
                "javadocs": 0,
                "name": "io.vertx.core.impl.IsolatingClassLoader.isVertxOrSystemClass(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.JavaVerticleFactory.prefix()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.impl.JavaVerticleFactory.createVerticle(String,ClassLoader)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.MultiThreadedWorkerContext.MultiThreadedWorkerContext(VertxInternal,WorkerPool,WorkerPool,String,JsonObject,ClassLoader)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.MultiThreadedWorkerContext.executeAsync(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.MultiThreadedWorkerContext.isMultiThreadedWorkerContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.NoStackTraceThrowable.NoStackTraceThrowable(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.StringEscapeUtils.StringEscapeUtils()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.StringEscapeUtils.escapeJava(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.StringEscapeUtils.escapeJava(Writer,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.StringEscapeUtils.escapeJavaScript(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.StringEscapeUtils.escapeJavaScript(Writer,String)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.impl.StringEscapeUtils.escapeJavaStyleString(String,boolean,boolean)"
              },
              {
                "cyclomatic_complexity": 22,
                "javadocs": 1,
                "name": "io.vertx.core.impl.StringEscapeUtils.escapeJavaStyleString(Writer,String,boolean,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.StringEscapeUtils.hex(char)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.impl.StringEscapeUtils.unescapeJava(String)"
              },
              {
                "cyclomatic_complexity": 20,
                "javadocs": 1,
                "name": "io.vertx.core.impl.StringEscapeUtils.unescapeJava(Writer,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.StringEscapeUtils.unescapeJavaScript(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.StringEscapeUtils.unescapeJavaScript(Writer,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.Utils.isWindows()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxFactoryImpl.vertx()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxFactoryImpl.vertx(VertxOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxFactoryImpl.clusteredVertx(VertxOptions,Vertx)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxFactoryImpl.context()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.getOrCreateContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.getEventLoopGroup()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.getAcceptorEventLoopGroup()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.getWorkerPool()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.sharedHttpServers()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.sharedNetServers()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.metricsSPI()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.VertxInternal.getContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.VertxInternal.createEventLoopContext(String,WorkerPool,JsonObject,ClassLoader)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.VertxInternal.createWorkerContext(boolean,String,WorkerPool,JsonObject,ClassLoader)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.createSharedWorkerExecutor(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.createSharedWorkerExecutor(String,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.createSharedWorkerExecutor(String,int,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.simulateKill()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.getDeployment(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.failoverCompleteHandler(FailoverCompleteHandler)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.isKilled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.failDuringFailover(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.getNodeID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.resolveFile(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.executeBlockingInternal(T,T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.getClusterManager()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.VertxInternal.resolveAddress(String,InetAddress)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.VertxInternal.addressResolver()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.VertxInternal.nettyAddressResolverGroup()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.addCloseHook(Closeable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxInternal.removeCloseHook(Closeable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxThread.VertxThread(Runnable,String,boolean,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxThread.getContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxThread.setContext(ContextImpl)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxThread.executeStart()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxThread.executeEnd()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxThread.startTime()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxThread.isWorker()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.VertxThread.getMaxExecTime()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerContext.WorkerContext(VertxInternal,WorkerPool,WorkerPool,String,JsonObject,ClassLoader)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerContext.executeAsync(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerContext.isEventLoopContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerContext.isMultiThreadedWorkerContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerContext.checkCorrectThread()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerContext.executeFromIO(ContextTask)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerExecutorImpl.WorkerExecutorImpl(ContextImpl,WorkerPool,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerExecutorImpl.getMetrics()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerExecutorImpl.isMetricsEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerExecutorImpl.getContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerExecutorImpl.getPool()"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerExecutorImpl.executeBlocking(T,boolean,T)"
              },
              {
                "cyclomatic_complexity": 5,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerExecutorImpl.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerExecutorImpl.close(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerExecutorInternal.getContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerPool.WorkerPool(ExecutorService,PoolMetrics)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerPool.executor()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerPool.createOrderedExecutor()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerPool.metrics()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.impl.WorkerPool.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.json.DecodeException.DecodeException()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.json.DecodeException.DecodeException(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.json.DecodeException.DecodeException(String,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.json.EncodeException.EncodeException(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.json.EncodeException.EncodeException()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.JULLogDelegate(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.isInfoEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.isDebugEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.isTraceEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.fatal(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.fatal(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.error(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.error(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.error(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.error(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.warn(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.warn(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.warn(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.warn(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.info(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.info(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.info(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.info(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.debug(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.debug(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.debug(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.debug(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.trace(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.trace(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.trace(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.trace(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.log(Level,Object)"
              },
              {
                "cyclomatic_complexity": 8,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.log(Level,Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.log(Level,Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.JULLogDelegate.unwrap()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.Log4j2LogDelegate(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.isInfoEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.isDebugEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.isTraceEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.fatal(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.fatal(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.error(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.error(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.error(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.error(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.warn(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.warn(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.warn(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.warn(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.info(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.info(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.info(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.info(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.debug(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.debug(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.debug(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.debug(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.trace(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.trace(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.trace(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.trace(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.log(Level,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.log(Level,Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.log(Level,String,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.log(Level,String,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegate.unwrap()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4j2LogDelegateFactory.createDelegate(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.Log4jLogDelegate(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.isInfoEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.isDebugEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.isTraceEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.fatal(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.fatal(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.error(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.error(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.error(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.error(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.warn(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.warn(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.warn(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.warn(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.info(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.info(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.info(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.info(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.debug(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.debug(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.debug(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.debug(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.trace(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.trace(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.trace(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.trace(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.log(Level,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.log(Level,Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.throwUnsupportedOperationException()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegate.unwrap()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Log4jLogDelegateFactory.createDelegate(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.Logger(LogDelegate)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.isInfoEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.isDebugEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.isTraceEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.fatal(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.fatal(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.error(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.error(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.error(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.error(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.warn(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.warn(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.warn(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.warn(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.info(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.info(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.info(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.info(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.debug(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.debug(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.debug(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.debug(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.trace(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.trace(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.trace(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.Logger.trace(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.logging.Logger.getDelegate()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.SLF4JLogDelegate(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.isInfoEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.isDebugEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.isTraceEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.fatal(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.fatal(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.error(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.error(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.error(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.error(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.warn(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.warn(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.warn(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.warn(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.info(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.info(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.info(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.info(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.debug(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.debug(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.debug(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.debug(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.trace(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.trace(Object,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.trace(Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.trace(Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.log(int,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.log(int,Object,Throwable)"
              },
              {
                "cyclomatic_complexity": 13,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.log(int,Object,Throwable,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegate.unwrap()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegateFactory.createDelegate(String)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.logging.VertxLoggerFormatter.format(LogRecord)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.VertxLoggerFormatter.fromMillis(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.verticleDeployed(Verticle)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.verticleUndeployed(Verticle)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.timerCreated(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.timerEnded(long,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.createMetrics(EventBus)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.createMetrics(HttpServer,SocketAddress,HttpServerOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.createMetrics(HttpClient,HttpClientOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.createMetrics(SocketAddress,NetServerOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.createMetrics(NetClient,NetClientOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.createMetrics(DatagramSocket,DatagramSocketOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.createMetrics(P,String,String,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.isEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.isMetricsEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyEventBusMetrics.messageWritten(String,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyEventBusMetrics.messageRead(String,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyEventBusMetrics.handlerRegistered(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyEventBusMetrics.handlerUnregistered(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyEventBusMetrics.beginHandleMessage(Void,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyEventBusMetrics.scheduleMessage(Void,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyEventBusMetrics.endHandleMessage(Void,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyEventBusMetrics.messageSent(String,boolean,boolean,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyEventBusMetrics.messageReceived(String,boolean,boolean,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyEventBusMetrics.replyFailure(String,ReplyFailure)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyEventBusMetrics.isEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyEventBusMetrics.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpServerMetrics.requestBegin(Void,HttpServerRequest)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpServerMetrics.requestReset(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpServerMetrics.responsePushed(Void,HttpMethod,String,HttpServerResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpServerMetrics.responseEnd(Void,HttpServerResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpServerMetrics.upgrade(Void,ServerWebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpServerMetrics.connected(SocketAddress,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpServerMetrics.disconnected(Void,SocketAddress)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpServerMetrics.bytesRead(Void,SocketAddress,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpServerMetrics.bytesWritten(Void,SocketAddress,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpServerMetrics.exceptionOccurred(Void,SocketAddress,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpServerMetrics.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpServerMetrics.isEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpServerMetrics.connected(Void,ServerWebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpServerMetrics.disconnected(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.createEndpoint(String,int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.enqueueRequest(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.dequeueRequest(Void,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.closeEndpoint(String,int,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.endpointConnected(Void,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.connected(SocketAddress,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.disconnected(Void,SocketAddress)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.endpointDisconnected(Void,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.requestBegin(Void,Void,SocketAddress,SocketAddress,HttpClientRequest)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.requestEnd(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.responseBegin(Void,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.responsePushed(Void,Void,SocketAddress,SocketAddress,HttpClientRequest)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.requestReset(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.responseEnd(Void,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.bytesRead(Void,SocketAddress,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.bytesWritten(Void,SocketAddress,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.exceptionOccurred(Void,SocketAddress,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.isEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.connected(Void,Void,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics.disconnected(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyTCPMetrics.connected(SocketAddress,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyTCPMetrics.disconnected(Void,SocketAddress)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyTCPMetrics.bytesRead(Void,SocketAddress,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyTCPMetrics.bytesWritten(Void,SocketAddress,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyTCPMetrics.exceptionOccurred(Void,SocketAddress,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyTCPMetrics.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyTCPMetrics.isEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyDatagramMetrics.listening(String,SocketAddress)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyDatagramMetrics.bytesRead(Void,SocketAddress,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyDatagramMetrics.bytesWritten(Void,SocketAddress,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyDatagramMetrics.exceptionOccurred(Void,SocketAddress,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyDatagramMetrics.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyDatagramMetrics.isEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyWorkerPoolMetrics.submitted()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyWorkerPoolMetrics.rejected(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyWorkerPoolMetrics.begin(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyWorkerPoolMetrics.end(Void,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyWorkerPoolMetrics.isEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyWorkerPoolMetrics.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.metrics.Measured.isMetricsEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.metrics.MetricsOptions.MetricsOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.metrics.MetricsOptions.MetricsOptions(MetricsOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.metrics.MetricsOptions.MetricsOptions(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.metrics.MetricsOptions.isEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.metrics.MetricsOptions.setEnabled(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.metrics.MetricsOptions.getFactory()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.metrics.MetricsOptions.setFactory(VertxMetricsFactory)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.MetricsOptions.toJson()"
              },
              {
                "cyclomatic_complexity": 9,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.MetricsOptions.equals(Object)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.MetricsOptions.hashCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.MetricsOptions.toString()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.MetricsOptionsConverter.fromJson(JsonObject,MetricsOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.MetricsOptionsConverter.toJson(MetricsOptions,JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.HandlerHolder.HandlerHolder(ContextImpl,T)"
              },
              {
                "cyclomatic_complexity": 11,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.HandlerHolder.equals(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.HandlerHolder.hashCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PartialPooledByteBufAllocator()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.buffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.buffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.buffer(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ioBuffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ioBuffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ioBuffer(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.heapBuffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.heapBuffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.heapBuffer(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.directBuffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.directBuffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.directBuffer(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.compositeBuffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.compositeBuffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.compositeHeapBuffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.compositeHeapBuffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.compositeDirectBuffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.compositeDirectBuffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.isDirectBufferPooled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.calculateNewCapacity(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.forceDirectAllocator(ChannelHandlerContext)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.PooledChannelHandlerContext(ChannelHandlerContext)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.hasAttr(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.channel()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.executor()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.name()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.handler()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.isRemoved()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.fireChannelRegistered()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.fireChannelUnregistered()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.fireChannelActive()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.fireChannelInactive()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.fireExceptionCaught(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.fireUserEventTriggered(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.fireChannelRead(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.fireChannelReadComplete()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.fireChannelWritabilityChanged()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.bind(SocketAddress)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.connect(SocketAddress)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.connect(SocketAddress,SocketAddress)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.disconnect()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.deregister()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.bind(SocketAddress,ChannelPromise)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.connect(SocketAddress,ChannelPromise)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.connect(SocketAddress,SocketAddress,ChannelPromise)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.disconnect(ChannelPromise)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.close(ChannelPromise)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.deregister(ChannelPromise)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.read()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.write(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.write(Object,ChannelPromise)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.flush()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.writeAndFlush(Object,ChannelPromise)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.writeAndFlush(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.pipeline()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.alloc()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.newPromise()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.newProgressivePromise()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.newSucceededFuture()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.newFailedFuture(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.voidPromise()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext.attr(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.buffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.buffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.buffer(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.ioBuffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.ioBuffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.ioBuffer(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.heapBuffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.heapBuffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.heapBuffer(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.directBuffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.directBuffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.directBuffer(int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.compositeBuffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.compositeBuffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.compositeHeapBuffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.compositeHeapBuffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.compositeDirectBuffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.compositeDirectBuffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.isDirectBufferPooled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator.calculateNewCapacity(int,int)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.SelfSignedCertificateImpl.SelfSignedCertificateImpl()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.SelfSignedCertificateImpl.keyCertOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.SelfSignedCertificateImpl.trustOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.SelfSignedCertificateImpl.privateKeyPath()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.SelfSignedCertificateImpl.certificatePath()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.SelfSignedCertificateImpl.delete()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.ServerID.ServerID(int,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.ServerID.ServerID()"
              },
              {
                "cyclomatic_complexity": 10,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.ServerID.equals(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.ServerID.hashCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.ServerID.toString()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.SocketAddressImpl.SocketAddressImpl(InetSocketAddress)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.SocketAddressImpl.SocketAddressImpl(int,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.SocketAddressImpl.host()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.SocketAddressImpl.port()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.SocketAddressImpl.toString()"
              },
              {
                "cyclomatic_complexity": 11,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.SocketAddressImpl.equals(Object)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.SocketAddressImpl.hashCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.TrustAllTrustManager.TrustAllTrustManager()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.TrustAllTrustManager.checkClientTrusted(X509Certificate[],String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.TrustAllTrustManager.checkServerTrusted(X509Certificate[],String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.TrustAllTrustManager.getAcceptedIssuers()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.VertxTrustManagerFactory.TrustManagerFactorySpi.engineInit(KeyStore)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.VertxTrustManagerFactory.TrustManagerFactorySpi.engineInit(ManagerFactoryParameters)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.VertxTrustManagerFactory.TrustManagerFactorySpi.engineGetTrustManagers()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.VertxTrustManagerFactory.VertxTrustManagerFactory(TrustManager)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ClientOptionsBase.ClientOptionsBase()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 1,
                "name": "io.vertx.core.net.ClientOptionsBase.ClientOptionsBase(ClientOptionsBase)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ClientOptionsBase.ClientOptionsBase(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ClientOptionsBase.toJson()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.ClientOptionsBase.init()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ClientOptionsBase.isTrustAll()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ClientOptionsBase.setTrustAll(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ClientOptionsBase.getConnectTimeout()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.net.ClientOptionsBase.setConnectTimeout(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ClientOptionsBase.getMetricsName()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ClientOptionsBase.setMetricsName(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ClientOptionsBase.setProxyOptions(ProxyOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ClientOptionsBase.getProxyOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ClientOptionsBase.getLocalAddress()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ClientOptionsBase.setLocalAddress(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.ClientOptionsBase.setLogActivity(boolean)"
              },
              {
                "cyclomatic_complexity": 17,
                "javadocs": 0,
                "name": "io.vertx.core.net.ClientOptionsBase.equals(Object)"
              },
              {
                "cyclomatic_complexity": 5,
                "javadocs": 0,
                "name": "io.vertx.core.net.ClientOptionsBase.hashCode()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.net.JdkSSLEngineOptions.isAlpnAvailable()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.JdkSSLEngineOptions.JdkSSLEngineOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.JdkSSLEngineOptions.JdkSSLEngineOptions(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.JdkSSLEngineOptions.JdkSSLEngineOptions(JdkSSLEngineOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.JdkSSLEngineOptions.toJson()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.JdkSSLEngineOptions.hashCode()"
              },
              {
                "cyclomatic_complexity": 5,
                "javadocs": 0,
                "name": "io.vertx.core.net.JdkSSLEngineOptions.equals(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.JdkSSLEngineOptions.clone()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.JksOptions.JksOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.JksOptions.JksOptions(JksOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.JksOptions.JksOptions(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.JksOptions.toJson()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.JksOptions.getPassword()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.JksOptions.setPassword(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.JksOptions.getPath()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.JksOptions.setPath(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.JksOptions.getValue()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.JksOptions.setValue(Buffer)"
              },
              {
                "cyclomatic_complexity": 14,
                "javadocs": 0,
                "name": "io.vertx.core.net.JksOptions.equals(Object)"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.net.JksOptions.hashCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.JksOptions.clone()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetClient.connect(int,String,NetSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetClient.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetClientOptions.NetClientOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetClientOptions.NetClientOptions(NetClientOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetClientOptions.NetClientOptions(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.init()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setSendBufferSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setReceiveBufferSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setReuseAddress(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setTrafficClass(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setTcpNoDelay(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setTcpKeepAlive(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setSoLinger(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setUsePooledBuffers(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setIdleTimeout(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setSsl(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setKeyCertOptions(KeyCertOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setKeyStoreOptions(JksOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setPfxKeyCertOptions(PfxOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setPemKeyCertOptions(PemKeyCertOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setTrustOptions(TrustOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setTrustStoreOptions(JksOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setPemTrustOptions(PemTrustOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setPfxTrustOptions(PfxOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.addEnabledCipherSuite(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.addEnabledSecureTransportProtocol(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.addCrlPath(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.addCrlValue(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setTrustAll(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setConnectTimeout(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setMetricsName(String)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetClientOptions.setReconnectAttempts(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetClientOptions.getReconnectAttempts()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetClientOptions.setReconnectInterval(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetClientOptions.getHostnameVerificationAlgorithm()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetClientOptions.setHostnameVerificationAlgorithm(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetClientOptions.getReconnectInterval()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setLogActivity(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setProxyOptions(ProxyOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.setLocalAddress(String)"
              },
              {
                "cyclomatic_complexity": 13,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.equals(Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptions.hashCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServer.connectStream()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServer.connectHandler(NetSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServer.connectHandler()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServer.listen()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServer.listen(NetServer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServer.listen(int,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServer.listen(int,String,NetServer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServer.listen(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServer.listen(int,NetServer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServer.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServer.close(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServer.actualPort()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServerOptions.NetServerOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServerOptions.NetServerOptions(NetServerOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServerOptions.NetServerOptions(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServerOptions.toJson()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setSendBufferSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setReceiveBufferSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setReuseAddress(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setTrafficClass(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setTcpNoDelay(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setTcpKeepAlive(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setSoLinger(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setUsePooledBuffers(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setIdleTimeout(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setSsl(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setUseAlpn(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setSslEngineOptions(SSLEngineOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setJdkSslEngineOptions(JdkSSLEngineOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setOpenSslEngineOptions(OpenSSLEngineOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setKeyCertOptions(KeyCertOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setKeyStoreOptions(JksOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setPfxKeyCertOptions(PfxOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setPemKeyCertOptions(PemKeyCertOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setTrustOptions(TrustOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setTrustStoreOptions(JksOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setPfxTrustOptions(PfxOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setPemTrustOptions(PemTrustOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.addEnabledCipherSuite(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.addEnabledSecureTransportProtocol(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.addCrlPath(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.addCrlValue(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServerOptions.getAcceptBacklog()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServerOptions.setAcceptBacklog(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServerOptions.getPort()"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServerOptions.setPort(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServerOptions.getHost()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServerOptions.setHost(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServerOptions.isClientAuthRequired()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServerOptions.setClientAuthRequired(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.getClientAuth()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServerOptions.setClientAuth(ClientAuth)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.setLogActivity(boolean)"
              },
              {
                "cyclomatic_complexity": 16,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.equals(Object)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.hashCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptions.init()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetworkOptions.NetworkOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetworkOptions.NetworkOptions(NetworkOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetworkOptions.NetworkOptions(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetworkOptions.toJson()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetworkOptions.getSendBufferSize()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetworkOptions.setSendBufferSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetworkOptions.getReceiveBufferSize()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetworkOptions.setReceiveBufferSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetworkOptions.isReuseAddress()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetworkOptions.setReuseAddress(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetworkOptions.getTrafficClass()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetworkOptions.setTrafficClass(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetworkOptions.getLogActivity()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetworkOptions.setLogActivity(boolean)"
              },
              {
                "cyclomatic_complexity": 13,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetworkOptions.equals(Object)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetworkOptions.hashCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.OpenSSLEngineOptions.isAvailable()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.OpenSSLEngineOptions.isAlpnAvailable()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.OpenSSLEngineOptions.OpenSSLEngineOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.OpenSSLEngineOptions.OpenSSLEngineOptions(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.OpenSSLEngineOptions.OpenSSLEngineOptions(OpenSSLEngineOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.OpenSSLEngineOptions.setSessionCacheEnabled(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.OpenSSLEngineOptions.isSessionCacheEnabled()"
              },
              {
                "cyclomatic_complexity": 7,
                "javadocs": 0,
                "name": "io.vertx.core.net.OpenSSLEngineOptions.equals(Object)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.net.OpenSSLEngineOptions.hashCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.OpenSSLEngineOptions.toJson()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.OpenSSLEngineOptions.clone()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PemKeyCertOptions.PemKeyCertOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PemKeyCertOptions.PemKeyCertOptions(PemKeyCertOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PemKeyCertOptions.PemKeyCertOptions(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PemKeyCertOptions.toJson()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PemKeyCertOptions.getKeyPath()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PemKeyCertOptions.setKeyPath(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PemKeyCertOptions.getCertPath()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PemKeyCertOptions.getKeyValue()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PemKeyCertOptions.setKeyValue(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PemKeyCertOptions.setCertPath(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PemKeyCertOptions.getCertValue()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PemKeyCertOptions.setCertValue(Buffer)"
              },
              {
                "cyclomatic_complexity": 17,
                "javadocs": 0,
                "name": "io.vertx.core.net.PemKeyCertOptions.equals(Object)"
              },
              {
                "cyclomatic_complexity": 5,
                "javadocs": 0,
                "name": "io.vertx.core.net.PemKeyCertOptions.hashCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.PemKeyCertOptions.clone()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PfxOptions.PfxOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PfxOptions.PfxOptions(PfxOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PfxOptions.PfxOptions(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PfxOptions.toJson()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PfxOptions.getPassword()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PfxOptions.setPassword(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PfxOptions.getPath()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PfxOptions.setPath(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PfxOptions.getValue()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.PfxOptions.setValue(Buffer)"
              },
              {
                "cyclomatic_complexity": 14,
                "javadocs": 0,
                "name": "io.vertx.core.net.PfxOptions.equals(Object)"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.net.PfxOptions.hashCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.PfxOptions.clone()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ProxyOptions.ProxyOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ProxyOptions.ProxyOptions(ProxyOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ProxyOptions.ProxyOptions(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ProxyOptions.toJson()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ProxyOptions.getHost()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ProxyOptions.setHost(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ProxyOptions.getPort()"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 1,
                "name": "io.vertx.core.net.ProxyOptions.setPort(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ProxyOptions.getUsername()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ProxyOptions.setUsername(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ProxyOptions.getPassword()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ProxyOptions.setPassword(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ProxyOptions.getType()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.ProxyOptions.setType(ProxyType)"
              },
              {
                "cyclomatic_complexity": 17,
                "javadocs": 0,
                "name": "io.vertx.core.net.ProxyOptions.equals(Object)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.net.ProxyOptions.hashCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.SelfSignedCertificate.keyCertOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.SelfSignedCertificate.trustOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.SelfSignedCertificate.privateKeyPath()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.SelfSignedCertificate.certificatePath()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.SelfSignedCertificate.delete()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.SelfSignedCertificate.create()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.SocketAddress.host()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.SocketAddress.port()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.SSLEngineOptions.clone()"
              },
              {
                "cyclomatic_complexity": 6,
                "javadocs": 0,
                "name": "io.vertx.core.net.ClientOptionsBaseConverter.fromJson(JsonObject,ClientOptionsBase)"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.net.ClientOptionsBaseConverter.toJson(ClientOptionsBase,JsonObject)"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.net.JksOptionsConverter.fromJson(JsonObject,JksOptions)"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.net.JksOptionsConverter.toJson(JksOptions,JsonObject)"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptionsConverter.fromJson(JsonObject,NetClientOptions)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetClientOptionsConverter.toJson(NetClientOptions,JsonObject)"
              },
              {
                "cyclomatic_complexity": 6,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptionsConverter.fromJson(JsonObject,NetServerOptions)"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetServerOptionsConverter.toJson(NetServerOptions,JsonObject)"
              },
              {
                "cyclomatic_complexity": 6,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetworkOptionsConverter.fromJson(JsonObject,NetworkOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.NetworkOptionsConverter.toJson(NetworkOptions,JsonObject)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 0,
                "name": "io.vertx.core.net.OpenSSLEngineOptionsConverter.fromJson(JsonObject,OpenSSLEngineOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.net.OpenSSLEngineOptionsConverter.toJson(OpenSSLEngineOptions,JsonObject)"
              },
              {
                "cyclomatic_complexity": 5,
                "javadocs": 0,
                "name": "io.vertx.core.net.PemKeyCertOptionsConverter.fromJson(JsonObject,PemKeyCertOptions)"
              },
              {
                "cyclomatic_complexity": 5,
                "javadocs": 0,
                "name": "io.vertx.core.net.PemKeyCertOptionsConverter.toJson(PemKeyCertOptions,JsonObject)"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.net.PfxOptionsConverter.fromJson(JsonObject,PfxOptions)"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.net.PfxOptionsConverter.toJson(PfxOptions,JsonObject)"
              },
              {
                "cyclomatic_complexity": 6,
                "javadocs": 0,
                "name": "io.vertx.core.net.ProxyOptionsConverter.fromJson(JsonObject,ProxyOptions)"
              },
              {
                "cyclomatic_complexity": 5,
                "javadocs": 0,
                "name": "io.vertx.core.net.ProxyOptionsConverter.toJson(ProxyOptions,JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.parsetools.impl.RecordParserImpl.RecordParserImpl(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.parsetools.impl.RecordParserImpl.setOutput(Buffer)"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 1,
                "name": "io.vertx.core.parsetools.impl.RecordParserImpl.latin1StringToBytes(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.parsetools.impl.RecordParserImpl.newDelimited(String,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.parsetools.impl.RecordParserImpl.newDelimited(Buffer,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.parsetools.impl.RecordParserImpl.newFixed(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.parsetools.impl.RecordParserImpl.delimitedMode(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.parsetools.impl.RecordParserImpl.delimitedMode(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.parsetools.impl.RecordParserImpl.fixedSizeMode(int)"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 0,
                "name": "io.vertx.core.parsetools.impl.RecordParserImpl.handleParsing()"
              },
              {
                "cyclomatic_complexity": 6,
                "javadocs": 0,
                "name": "io.vertx.core.parsetools.impl.RecordParserImpl.parseDelimited()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 0,
                "name": "io.vertx.core.parsetools.impl.RecordParserImpl.parseFixed()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 1,
                "name": "io.vertx.core.parsetools.impl.RecordParserImpl.handle(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.parsetools.RecordParser.setOutput(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.parsetools.RecordParser.newDelimited(String,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.parsetools.RecordParser.newDelimited(Buffer,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.parsetools.RecordParser.newFixed(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.parsetools.RecordParser.delimitedMode(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.parsetools.RecordParser.delimitedMode(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.parsetools.RecordParser.fixedSizeMode(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.parsetools.RecordParser.handle(Buffer)"
              },
              {
                "cyclomatic_complexity": 16,
                "javadocs": 0,
                "name": "io.vertx.core.shareddata.impl.Checker.checkType(Object)"
              },
              {
                "cyclomatic_complexity": 9,
                "javadocs": 0,
                "name": "io.vertx.core.shareddata.impl.Checker.copyIfRequired(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.shareddata.impl.ClusterSerializable.writeToBuffer(Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.shareddata.impl.ClusterSerializable.readFromBuffer(int,Buffer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.AsyncMap.get(K,V)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.AsyncMap.put(K,V,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.AsyncMap.put(K,V,long,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.AsyncMap.putIfAbsent(K,V,V)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.AsyncMap.putIfAbsent(K,V,long,V)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.AsyncMap.remove(K,V)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.AsyncMap.removeIfPresent(K,V,Boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.AsyncMap.replace(K,V,V)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.AsyncMap.replaceIfPresent(K,V,V,Boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.AsyncMap.clear(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.AsyncMap.size(Integer)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.Counter.get(Long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.Counter.incrementAndGet(Long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.Counter.getAndIncrement(Long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.Counter.decrementAndGet(Long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.Counter.addAndGet(long,Long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.Counter.getAndAdd(long,Long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.Counter.compareAndSet(long,long,Boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.LocalMap.get(K)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.LocalMap.put(K,V)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.LocalMap.remove(K)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.LocalMap.clear()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.LocalMap.size()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.LocalMap.isEmpty()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.LocalMap.putIfAbsent(K,V)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.LocalMap.removeIfPresent(K,V)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.LocalMap.replaceIfPresent(K,V,V)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.LocalMap.replace(K,V)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.LocalMap.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.LocalMap.keySet()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.LocalMap.values()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.Lock.release()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.shareddata.SharedData.getClusterWideMap(String,V)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.SharedData.getLock(String,Lock)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.SharedData.getLockWithTimeout(String,long,Lock)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.SharedData.getCounter(String,Counter)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.shareddata.SharedData.getLocalMap(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.cluster.AsyncMultiMap.add(K,V,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.cluster.AsyncMultiMap.get(K,V)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.cluster.AsyncMultiMap.remove(K,V,Boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.cluster.AsyncMultiMap.removeAllForValue(V,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.cluster.AsyncMultiMap.removeAllMatching(V,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.cluster.ChoosableIterable.isEmpty()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.cluster.ChoosableIterable.choose()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.cluster.ClusterManager.setVertx(Vertx)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.cluster.ClusterManager.getAsyncMultiMap(String,V)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.cluster.ClusterManager.getAsyncMap(String,V)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.cluster.ClusterManager.getSyncMap(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.cluster.ClusterManager.getLockWithTimeout(String,long,Lock)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.cluster.ClusterManager.getCounter(String,Counter)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.cluster.ClusterManager.getNodeID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.cluster.ClusterManager.getNodes()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.cluster.ClusterManager.nodeListener(NodeListener)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.cluster.ClusterManager.join(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.cluster.ClusterManager.leave(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.cluster.ClusterManager.isActive()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.cluster.NodeListener.nodeAdded(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.cluster.NodeListener.nodeLeft(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.Command.setUp(ExecutionContext)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.Command.run()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.Command.tearDown()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.CommandFactory.create(CommandLine)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.CommandFactory.define()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.CommandFactoryLookup.lookup()"
              },
              {
                "cyclomatic_complexity": 2,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.DefaultCommand.getCwd()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.DefaultCommand.setCwd(File)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.DefaultCommand.setSystemProps(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.launcher.DefaultCommand.setUp(ExecutionContext)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.DefaultCommand.out()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.launcher.DefaultCommand.tearDown()"
              },
              {
                "cyclomatic_complexity": 4,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.DefaultCommand.applySystemProperties()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.DefaultCommandFactory.DefaultCommandFactory(C)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.DefaultCommandFactory.create(CommandLine)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.DefaultCommandFactory.define()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.ExecutionContext.ExecutionContext(Command,VertxCommandLauncher,CommandLine)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.ExecutionContext.command()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.ExecutionContext.launcher()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.ExecutionContext.cli()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.ExecutionContext.commandLine()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.ExecutionContext.execute(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.ExecutionContext.main()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.launcher.ExecutionContext.getPrintStream()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.logging.LogDelegateFactory.createDelegate(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.DatagramSocketMetrics.listening(String,SocketAddress)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.EventBusMetrics.handlerRegistered(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.EventBusMetrics.handlerUnregistered(H)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.EventBusMetrics.scheduleMessage(H,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.EventBusMetrics.beginHandleMessage(H,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.EventBusMetrics.endHandleMessage(H,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.EventBusMetrics.messageSent(String,boolean,boolean,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.EventBusMetrics.messageReceived(String,boolean,boolean,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.EventBusMetrics.messageWritten(String,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.EventBusMetrics.messageRead(String,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.EventBusMetrics.replyFailure(String,ReplyFailure)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpClientMetrics.createEndpoint(String,int,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpClientMetrics.closeEndpoint(String,int,E)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpClientMetrics.enqueueRequest(E)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpClientMetrics.dequeueRequest(E,T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpClientMetrics.endpointConnected(E,S)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpClientMetrics.endpointDisconnected(E,S)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpClientMetrics.requestBegin(E,S,SocketAddress,SocketAddress,HttpClientRequest)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpClientMetrics.requestEnd(R)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpClientMetrics.responseBegin(R,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpClientMetrics.responsePushed(E,S,SocketAddress,SocketAddress,HttpClientRequest)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpClientMetrics.requestReset(R)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpClientMetrics.responseEnd(R,HttpClientResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpClientMetrics.connected(E,S,WebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpClientMetrics.disconnected(W)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpServerMetrics.requestBegin(S,HttpServerRequest)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpServerMetrics.requestReset(R)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpServerMetrics.responsePushed(S,HttpMethod,String,HttpServerResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpServerMetrics.responseEnd(R,HttpServerResponse)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpServerMetrics.upgrade(R,ServerWebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpServerMetrics.connected(S,ServerWebSocket)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.HttpServerMetrics.disconnected(W)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.Metrics.isEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.Metrics.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.MetricsProvider.getMetrics()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.NetworkMetrics.bytesRead(S,SocketAddress,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.NetworkMetrics.bytesWritten(S,SocketAddress,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.NetworkMetrics.exceptionOccurred(S,SocketAddress,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.PoolMetrics.submitted()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.PoolMetrics.begin(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.PoolMetrics.rejected(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.PoolMetrics.end(T,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.TCPMetrics.connected(SocketAddress,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.metrics.TCPMetrics.disconnected(S,SocketAddress)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.BufferFactory.buffer(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.BufferFactory.buffer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.BufferFactory.buffer(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.BufferFactory.buffer(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.BufferFactory.buffer(Buffer[])"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.BufferFactory.buffer(ByteBuf)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.FutureFactory.future()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.FutureFactory.succeededFuture()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.FutureFactory.succeededFuture(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.FutureFactory.failedFuture(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.FutureFactory.failureFuture(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.PumpFactory.pump(T,T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.PumpFactory.pump(T,T,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.VertxFactory.vertx()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.VertxFactory.vertx(VertxOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.VertxFactory.clusteredVertx(VertxOptions,Vertx)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.VertxFactory.context()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.WebSocketFrameFactory.binaryFrame(Buffer,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.WebSocketFrameFactory.textFrame(String,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.spi.WebSocketFrameFactory.continuationFrame(Buffer,boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.streams.Pump.pump(T,T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.streams.Pump.pump(T,T,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.streams.Pump.setWriteQueueMaxSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.streams.Pump.start()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.streams.Pump.stop()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.streams.Pump.numberPumped()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.streams.ReadStream.exceptionHandler(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.streams.ReadStream.handler(T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.streams.ReadStream.pause()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.streams.ReadStream.resume()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.streams.ReadStream.endHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.streams.StreamBase.exceptionHandler(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.AbstractVerticle.getVertx()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.AbstractVerticle.init(Vertx,Context)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.AbstractVerticle.deploymentID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.AbstractVerticle.config()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.AbstractVerticle.processArgs()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.AbstractVerticle.start(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.AbstractVerticle.stop(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.AbstractVerticle.start()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.AbstractVerticle.stop()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.Closeable.close(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Context.isOnWorkerThread()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Context.isOnEventLoopThread()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Context.isOnVertxThread()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Context.runOnContext(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.Context.executeBlocking(T,boolean,T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.Context.executeBlocking(T,T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Context.deploymentID()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Context.config()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Context.processArgs()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Context.isEventLoopContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Context.isWorkerContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Context.isMultiThreadedWorkerContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.Context.get(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Context.put(String,Object)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Context.remove(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Context.owner()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Context.getInstanceCount()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Context.exceptionHandler(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Context.exceptionHandler()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.Context.addCloseHook(Closeable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.Context.removeCloseHook(Closeable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Handler.handle(E)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Launcher.main(String[])"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Launcher.executeCommand(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Launcher.afterConfigParsed(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Launcher.beforeStartingVertx(VertxOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Launcher.afterStartingVertx(Vertx)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Launcher.beforeDeployingVerticle(DeploymentOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Launcher.handleDeployFailed(Vertx,String,DeploymentOptions,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.caseInsensitiveMultiMap()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.MultiMap.get(CharSequence)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.get(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.getAll(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.getAll(CharSequence)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.entries()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.contains(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.contains(CharSequence)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.isEmpty()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.names()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.add(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.add(CharSequence,CharSequence)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.add(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.add(CharSequence,CharSequence)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.addAll(MultiMap)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.addAll(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.set(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.set(CharSequence,CharSequence)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.set(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.set(CharSequence,CharSequence)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.setAll(MultiMap)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.setAll(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.remove(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.remove(CharSequence)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.clear()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.MultiMap.size()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.TimeoutStream.exceptionHandler(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.TimeoutStream.handler(Long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.TimeoutStream.pause()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.TimeoutStream.resume()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.TimeoutStream.endHandler(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.TimeoutStream.cancel()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Verticle.getVertx()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Verticle.init(Vertx,Context)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Verticle.start(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Verticle.stop(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.vertx()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.vertx(VertxOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.clusteredVertx(VertxOptions,Vertx)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.currentContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.getOrCreateContext()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.createNetServer(NetServerOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.createNetServer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.createNetClient(NetClientOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.createNetClient()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.createHttpServer(HttpServerOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.createHttpServer()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.createHttpClient(HttpClientOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.createHttpClient()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.createDatagramSocket(DatagramSocketOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.createDatagramSocket()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.fileSystem()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.eventBus()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.createDnsClient(int,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.sharedData()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.setTimer(long,Long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.timerStream(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.setPeriodic(long,Long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.periodicStream(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.cancelTimer(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.runOnContext(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.close()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.close(Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.deployVerticle(Verticle)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.deployVerticle(Verticle,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.deployVerticle(Verticle,DeploymentOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.deployVerticle(Verticle,DeploymentOptions,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.deployVerticle(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.deployVerticle(String,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.deployVerticle(String,DeploymentOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.deployVerticle(String,DeploymentOptions,String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.undeploy(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.undeploy(String,Void)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.deploymentIDs()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.registerVerticleFactory(VerticleFactory)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.unregisterVerticleFactory(VerticleFactory)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.verticleFactories()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.isClustered()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.Vertx.executeBlocking(T,boolean,T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.Vertx.executeBlocking(T,T)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.nettyEventLoopGroup()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.createSharedWorkerExecutor(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.createSharedWorkerExecutor(String,int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.createSharedWorkerExecutor(String,int,long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.exceptionHandler(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Vertx.exceptionHandler()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxException.VertxException(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxException.VertxException(String,Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxException.VertxException(Throwable)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.VertxOptions()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.VertxOptions(VertxOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.VertxOptions(JsonObject)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getEventLoopPoolSize()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setEventLoopPoolSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getWorkerPoolSize()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setWorkerPoolSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.isClustered()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setClustered(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getClusterHost()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setClusterHost(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getClusterPublicHost()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setClusterPublicHost(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getClusterPort()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setClusterPort(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getClusterPublicPort()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setClusterPublicPort(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getClusterPingInterval()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setClusterPingInterval(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getClusterPingReplyInterval()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setClusterPingReplyInterval(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getBlockedThreadCheckInterval()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setBlockedThreadCheckInterval(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getMaxEventLoopExecuteTime()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setMaxEventLoopExecuteTime(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getMaxWorkerExecuteTime()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setMaxWorkerExecuteTime(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getClusterManager()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setClusterManager(ClusterManager)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getInternalBlockingPoolSize()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setInternalBlockingPoolSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.isHAEnabled()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setHAEnabled(boolean)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getQuorumSize()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setQuorumSize(int)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getHAGroup()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setHAGroup(String)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getMetricsOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setMetricsOptions(MetricsOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getWarningExceptionTime()"
              },
              {
                "cyclomatic_complexity": 3,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setWarningExceptionTime(long)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getEventBusOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setEventBusOptions(EventBusOptions)"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.getAddressResolverOptions()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptions.setAddressResolverOptions(AddressResolverOptions)"
              },
              {
                "cyclomatic_complexity": 37,
                "javadocs": 0,
                "name": "io.vertx.core.VertxOptions.equals(Object)"
              },
              {
                "cyclomatic_complexity": 7,
                "javadocs": 0,
                "name": "io.vertx.core.VertxOptions.hashCode()"
              },
              {
                "cyclomatic_complexity": 1,
                "javadocs": 0,
                "name": "io.vertx.core.VertxOptions.toString()"
              },
              {
                "cyclomatic_complexity": 21,
                "javadocs": 0,
                "name": "io.vertx.core.VertxOptionsConverter.fromJson(JsonObject,VertxOptions)"
              },
              {
                "cyclomatic_complexity": 7,
                "javadocs": 0,
                "name": "io.vertx.core.VertxOptionsConverter.toJson(VertxOptions,JsonObject)"
              }
            ]
          },
          "objects": {
            "average_classes": 0.05,
            "average_functions": 9.5,
            "average_javadocs": 5.15,
            "object": [
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 1,
                "name": "examples.cli.AnnotatedCli"
              },
              {
                "classes": 0,
                "functions": 11,
                "javadocs": 1,
                "name": "examples.cli.CLIExamples"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 0,
                "name": "examples.cli.MyCommand"
              },
              {
                "classes": 2,
                "functions": 4,
                "javadocs": 1,
                "name": "examples.cli.TypedCLIExamples"
              },
              {
                "classes": 0,
                "functions": 0,
                "javadocs": 0,
                "name": "examples.cli.TypedCLIExamples.Person"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 0,
                "name": "examples.cli.TypedCLIExamples.PersonConverter"
              },
              {
                "classes": 0,
                "functions": 8,
                "javadocs": 1,
                "name": "examples.BufferExamples"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 1,
                "name": "examples.ConfigurableVerticleExamples"
              },
              {
                "classes": 0,
                "functions": 6,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.impl.BufferFactoryImpl"
              },
              {
                "classes": 0,
                "functions": 96,
                "javadocs": 1,
                "name": "io.vertx.core.buffer.impl.BufferImpl"
              },
              {
                "classes": 0,
                "functions": 88,
                "javadocs": 89,
                "name": "io.vertx.core.buffer.Buffer"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 2,
                "name": "io.vertx.core.cli.converters.BooleanConverter"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.cli.converters.CharacterConverter"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 1,
                "name": "io.vertx.core.cli.converters.Converter"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 2,
                "name": "io.vertx.core.cli.converters.StringConverter"
              },
              {
                "classes": 0,
                "functions": 19,
                "javadocs": 20,
                "name": "io.vertx.core.cli.Argument"
              },
              {
                "classes": 0,
                "functions": 27,
                "javadocs": 27,
                "name": "io.vertx.core.cli.CLI"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 3,
                "name": "io.vertx.core.cli.CLIException"
              },
              {
                "classes": 0,
                "functions": 6,
                "javadocs": 7,
                "name": "io.vertx.core.cli.InvalidValueException"
              },
              {
                "classes": 0,
                "functions": 4,
                "javadocs": 5,
                "name": "io.vertx.core.cli.MissingValueException"
              },
              {
                "classes": 0,
                "functions": 14,
                "javadocs": 8,
                "name": "io.vertx.core.cli.TypedArgument"
              },
              {
                "classes": 0,
                "functions": 24,
                "javadocs": 4,
                "name": "io.vertx.core.cli.TypedOption"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.cli.ArgumentConverter"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.impl.DatagramPacketImpl"
              },
              {
                "classes": 0,
                "functions": 0,
                "javadocs": 0,
                "name": "io.vertx.core.datagram.impl.InternetProtocolFamily"
              },
              {
                "classes": 0,
                "functions": 8,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.impl.PacketWriteStreamImpl"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 3,
                "name": "io.vertx.core.datagram.DatagramPacket"
              },
              {
                "classes": 0,
                "functions": 19,
                "javadocs": 15,
                "name": "io.vertx.core.datagram.DatagramSocket"
              },
              {
                "classes": 0,
                "functions": 24,
                "javadocs": 14,
                "name": "io.vertx.core.datagram.DatagramSocketOptions"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.datagram.DatagramSocketOptionsConverter"
              },
              {
                "classes": 0,
                "functions": 8,
                "javadocs": 9,
                "name": "io.vertx.core.dns.impl.decoder.StartOfAuthorityRecord"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.dns.impl.MxRecordImpl"
              },
              {
                "classes": 0,
                "functions": 9,
                "javadocs": 1,
                "name": "io.vertx.core.dns.impl.SrvRecordImpl"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 2,
                "name": "io.vertx.core.dns.DnsException"
              },
              {
                "classes": 0,
                "functions": 4,
                "javadocs": 0,
                "name": "io.vertx.core.dns.DnsResponseCode"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 3,
                "name": "io.vertx.core.dns.MxRecord"
              },
              {
                "classes": 0,
                "functions": 7,
                "javadocs": 8,
                "name": "io.vertx.core.dns.SrvRecord"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.clustered.ClusterNodeInfo"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.codecs.BooleanMessageCodec"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.codecs.BufferMessageCodec"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.codecs.ByteArrayMessageCodec"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.codecs.ByteMessageCodec"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.codecs.CharMessageCodec"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.codecs.DoubleMessageCodec"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.codecs.FloatMessageCodec"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.codecs.IntMessageCodec"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.codecs.JsonArrayMessageCodec"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.codecs.JsonObjectMessageCodec"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.codecs.LongMessageCodec"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.codecs.NullMessageCodec"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.codecs.PingMessageCodec"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.codecs.ReplyExceptionMessageCodec"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.codecs.ShortMessageCodec"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.codecs.StringMessageCodec"
              },
              {
                "classes": 0,
                "functions": 9,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.impl.HandlerHolder"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.BridgeInterceptor"
              },
              {
                "classes": 0,
                "functions": 11,
                "javadocs": 11,
                "name": "io.vertx.core.eventbus.DeliveryOptions"
              },
              {
                "classes": 0,
                "functions": 22,
                "javadocs": 15,
                "name": "io.vertx.core.eventbus.EventBus"
              },
              {
                "classes": 0,
                "functions": 51,
                "javadocs": 31,
                "name": "io.vertx.core.eventbus.EventBusOptions"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 1,
                "name": "io.vertx.core.eventbus.FilteringInterceptor"
              },
              {
                "classes": 0,
                "functions": 10,
                "javadocs": 9,
                "name": "io.vertx.core.eventbus.Message"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 6,
                "name": "io.vertx.core.eventbus.MessageCodec"
              },
              {
                "classes": 0,
                "functions": 13,
                "javadocs": 9,
                "name": "io.vertx.core.eventbus.MessageConsumer"
              },
              {
                "classes": 0,
                "functions": 10,
                "javadocs": 6,
                "name": "io.vertx.core.eventbus.MessageProducer"
              },
              {
                "classes": 0,
                "functions": 6,
                "javadocs": 6,
                "name": "io.vertx.core.eventbus.ReplyException"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 0,
                "name": "io.vertx.core.eventbus.ReplyFailure"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 4,
                "name": "io.vertx.core.eventbus.SendContext"
              },
              {
                "classes": 0,
                "functions": 9,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.FilePropsImpl"
              },
              {
                "classes": 0,
                "functions": 4,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.FileSystemPropsImpl"
              },
              {
                "classes": 1,
                "functions": 7,
                "javadocs": 1,
                "name": "io.vertx.core.file.impl.WindowsFileSystem"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 0,
                "name": "io.vertx.core.file.impl.WindowsFileSystem.BlockingAction"
              },
              {
                "classes": 0,
                "functions": 18,
                "javadocs": 11,
                "name": "io.vertx.core.file.AsyncFile"
              },
              {
                "classes": 0,
                "functions": 8,
                "javadocs": 9,
                "name": "io.vertx.core.file.FileProps"
              },
              {
                "classes": 0,
                "functions": 56,
                "javadocs": 57,
                "name": "io.vertx.core.file.FileSystem"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 1,
                "name": "io.vertx.core.file.FileSystemException"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 4,
                "name": "io.vertx.core.file.FileSystemProps"
              },
              {
                "classes": 0,
                "functions": 23,
                "javadocs": 24,
                "name": "io.vertx.core.file.OpenOptions"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.file.OpenOptionsConverter"
              },
              {
                "classes": 1,
                "functions": 1,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler"
              },
              {
                "classes": 0,
                "functions": 24,
                "javadocs": 7,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameImpl"
              },
              {
                "classes": 0,
                "functions": 4,
                "javadocs": 4,
                "name": "io.vertx.core.http.impl.ws.WebSocketFrameInternal"
              },
              {
                "classes": 0,
                "functions": 16,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.AssembledFullHttpRequest"
              },
              {
                "classes": 0,
                "functions": 16,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.AssembledFullHttpResponse"
              },
              {
                "classes": 0,
                "functions": 27,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.AssembledHttpRequest"
              },
              {
                "classes": 0,
                "functions": 24,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.AssembledHttpResponse"
              },
              {
                "classes": 0,
                "functions": 13,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.AssembledLastHttpContent"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.ClientHandler"
              },
              {
                "classes": 0,
                "functions": 0,
                "javadocs": 0,
                "name": "io.vertx.core.http.impl.FrameType"
              },
              {
                "classes": 0,
                "functions": 27,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.HeadersAdaptor"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.HttpChunkContentCompressor"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 2,
                "name": "io.vertx.core.http.impl.HttpClientConnection"
              },
              {
                "classes": 0,
                "functions": 41,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.HttpClientRequestPushPromise"
              },
              {
                "classes": 0,
                "functions": 18,
                "javadocs": 3,
                "name": "io.vertx.core.http.impl.HttpClientStream"
              },
              {
                "classes": 0,
                "functions": 4,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.HttpFrameImpl"
              },
              {
                "classes": 0,
                "functions": 43,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.NettyFileUpload"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.NettyFileUploadDataFactory"
              },
              {
                "classes": 0,
                "functions": 12,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.ServerWebSocketImpl"
              },
              {
                "classes": 0,
                "functions": 4,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.VertxHttp2ClientUpgradeCodec"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.VertxHttpResponseEncoder"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 5,
                "name": "io.vertx.core.http.impl.Waiter"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.WebSocketFrameFactoryImpl"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.http.impl.WebSocketImpl"
              },
              {
                "classes": 0,
                "functions": 0,
                "javadocs": 0,
                "name": "io.vertx.core.http.ClientAuth"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 2,
                "name": "io.vertx.core.http.ConnectionPoolTooBusyException"
              },
              {
                "classes": 0,
                "functions": 10,
                "javadocs": 6,
                "name": "io.vertx.core.http.GoAway"
              },
              {
                "classes": 0,
                "functions": 133,
                "javadocs": 134,
                "name": "io.vertx.core.http.HttpClient"
              },
              {
                "classes": 0,
                "functions": 18,
                "javadocs": 14,
                "name": "io.vertx.core.http.HttpClientResponse"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 4,
                "name": "io.vertx.core.http.HttpFrame"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 2,
                "name": "io.vertx.core.http.HttpHeaders"
              },
              {
                "classes": 0,
                "functions": 0,
                "javadocs": 0,
                "name": "io.vertx.core.http.HttpMethod"
              },
              {
                "classes": 0,
                "functions": 16,
                "javadocs": 17,
                "name": "io.vertx.core.http.HttpServer"
              },
              {
                "classes": 0,
                "functions": 13,
                "javadocs": 9,
                "name": "io.vertx.core.http.HttpServerFileUpload"
              },
              {
                "classes": 0,
                "functions": 0,
                "javadocs": 0,
                "name": "io.vertx.core.http.HttpVersion"
              },
              {
                "classes": 0,
                "functions": 11,
                "javadocs": 12,
                "name": "io.vertx.core.http.RequestOptions"
              },
              {
                "classes": 0,
                "functions": 20,
                "javadocs": 6,
                "name": "io.vertx.core.http.ServerWebSocket"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 2,
                "name": "io.vertx.core.http.StreamResetException"
              },
              {
                "classes": 0,
                "functions": 15,
                "javadocs": 1,
                "name": "io.vertx.core.http.WebSocket"
              },
              {
                "classes": 0,
                "functions": 23,
                "javadocs": 16,
                "name": "io.vertx.core.http.WebSocketBase"
              },
              {
                "classes": 0,
                "functions": 9,
                "javadocs": 10,
                "name": "io.vertx.core.http.WebSocketFrame"
              },
              {
                "classes": 0,
                "functions": 0,
                "javadocs": 0,
                "name": "io.vertx.core.http.WebsocketVersion"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.http.GoAwayConverter"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.http.Http2SettingsConverter"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 2,
                "name": "io.vertx.core.impl.launcher.commands.BareCommandFactory"
              },
              {
                "classes": 0,
                "functions": 9,
                "javadocs": 10,
                "name": "io.vertx.core.impl.launcher.commands.ExecUtils"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 2,
                "name": "io.vertx.core.impl.launcher.commands.ListCommandFactory"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 2,
                "name": "io.vertx.core.impl.launcher.commands.RunCommandFactory"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 2,
                "name": "io.vertx.core.impl.launcher.commands.StartCommandFactory"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 2,
                "name": "io.vertx.core.impl.launcher.commands.StopCommandFactory"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 2,
                "name": "io.vertx.core.impl.launcher.commands.VersionCommandFactory"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 4,
                "name": "io.vertx.core.impl.launcher.CommandLineUtils"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 6,
                "name": "io.vertx.core.impl.launcher.VertxLifecycleHooks"
              },
              {
                "classes": 0,
                "functions": 16,
                "javadocs": 1,
                "name": "io.vertx.core.impl.verticle.CustomJavaFileObject"
              },
              {
                "classes": 0,
                "functions": 4,
                "javadocs": 1,
                "name": "io.vertx.core.impl.verticle.JavaSourceContext"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.Action"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 3,
                "name": "io.vertx.core.impl.Arguments"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 4,
                "name": "io.vertx.core.impl.ContextInternal"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.ContextTask"
              },
              {
                "classes": 0,
                "functions": 9,
                "javadocs": 1,
                "name": "io.vertx.core.impl.Deployment"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.impl.EventLoopContext"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 0,
                "name": "io.vertx.core.impl.ExtendedClusterManager"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.FailoverCompleteHandler"
              },
              {
                "classes": 0,
                "functions": 22,
                "javadocs": 10,
                "name": "io.vertx.core.impl.FutureImpl"
              },
              {
                "classes": 0,
                "functions": 6,
                "javadocs": 3,
                "name": "io.vertx.core.impl.IsolatingClassLoader"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.impl.JavaVerticleFactory"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 1,
                "name": "io.vertx.core.impl.MultiThreadedWorkerContext"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.NoStackTraceThrowable"
              },
              {
                "classes": 0,
                "functions": 12,
                "javadocs": 13,
                "name": "io.vertx.core.impl.StringEscapeUtils"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 2,
                "name": "io.vertx.core.impl.Utils"
              },
              {
                "classes": 0,
                "functions": 4,
                "javadocs": 1,
                "name": "io.vertx.core.impl.VertxFactoryImpl"
              },
              {
                "classes": 0,
                "functions": 27,
                "javadocs": 7,
                "name": "io.vertx.core.impl.VertxInternal"
              },
              {
                "classes": 0,
                "functions": 8,
                "javadocs": 1,
                "name": "io.vertx.core.impl.VertxThread"
              },
              {
                "classes": 0,
                "functions": 6,
                "javadocs": 1,
                "name": "io.vertx.core.impl.WorkerContext"
              },
              {
                "classes": 0,
                "functions": 8,
                "javadocs": 1,
                "name": "io.vertx.core.impl.WorkerExecutorImpl"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 1,
                "name": "io.vertx.core.impl.WorkerExecutorInternal"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.impl.WorkerPool"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 1,
                "name": "io.vertx.core.json.DecodeException"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.json.EncodeException"
              },
              {
                "classes": 0,
                "functions": 30,
                "javadocs": 1,
                "name": "io.vertx.core.logging.JULLogDelegate"
              },
              {
                "classes": 0,
                "functions": 31,
                "javadocs": 1,
                "name": "io.vertx.core.logging.Log4j2LogDelegate"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 1,
                "name": "io.vertx.core.logging.Log4j2LogDelegateFactory"
              },
              {
                "classes": 0,
                "functions": 30,
                "javadocs": 1,
                "name": "io.vertx.core.logging.Log4jLogDelegate"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 1,
                "name": "io.vertx.core.logging.Log4jLogDelegateFactory"
              },
              {
                "classes": 0,
                "functions": 27,
                "javadocs": 2,
                "name": "io.vertx.core.logging.Logger"
              },
              {
                "classes": 0,
                "functions": 30,
                "javadocs": 1,
                "name": "io.vertx.core.logging.SLF4JLogDelegate"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 0,
                "name": "io.vertx.core.logging.SLF4JLogDelegateFactory"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.logging.VertxLoggerFormatter"
              },
              {
                "classes": 6,
                "functions": 14,
                "javadocs": 1,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics"
              },
              {
                "classes": 0,
                "functions": 6,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyDatagramMetrics"
              },
              {
                "classes": 0,
                "functions": 12,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyEventBusMetrics"
              },
              {
                "classes": 0,
                "functions": 21,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpClientMetrics"
              },
              {
                "classes": 0,
                "functions": 14,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyHttpServerMetrics"
              },
              {
                "classes": 0,
                "functions": 7,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyTCPMetrics"
              },
              {
                "classes": 0,
                "functions": 6,
                "javadocs": 0,
                "name": "io.vertx.core.metrics.impl.DummyVertxMetrics.DummyWorkerPoolMetrics"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 2,
                "name": "io.vertx.core.metrics.Measured"
              },
              {
                "classes": 0,
                "functions": 11,
                "javadocs": 8,
                "name": "io.vertx.core.metrics.MetricsOptions"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.metrics.MetricsOptionsConverter"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 1,
                "name": "io.vertx.core.net.impl.HandlerHolder"
              },
              {
                "classes": 2,
                "functions": 22,
                "javadocs": 2,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator"
              },
              {
                "classes": 0,
                "functions": 20,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.ForceDirectPoooledByteBufAllocator"
              },
              {
                "classes": 0,
                "functions": 42,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.PartialPooledByteBufAllocator.PooledChannelHandlerContext"
              },
              {
                "classes": 0,
                "functions": 6,
                "javadocs": 1,
                "name": "io.vertx.core.net.impl.SelfSignedCertificateImpl"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.net.impl.ServerID"
              },
              {
                "classes": 0,
                "functions": 7,
                "javadocs": 1,
                "name": "io.vertx.core.net.impl.SocketAddressImpl"
              },
              {
                "classes": 0,
                "functions": 4,
                "javadocs": 1,
                "name": "io.vertx.core.net.impl.TrustAllTrustManager"
              },
              {
                "classes": 2,
                "functions": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.impl.VertxTrustManagerFactory"
              },
              {
                "classes": 0,
                "functions": 0,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.VertxTrustManagerFactory.Provider"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 0,
                "name": "io.vertx.core.net.impl.VertxTrustManagerFactory.TrustManagerFactorySpi"
              },
              {
                "classes": 0,
                "functions": 18,
                "javadocs": 15,
                "name": "io.vertx.core.net.ClientOptionsBase"
              },
              {
                "classes": 0,
                "functions": 8,
                "javadocs": 2,
                "name": "io.vertx.core.net.JdkSSLEngineOptions"
              },
              {
                "classes": 0,
                "functions": 13,
                "javadocs": 11,
                "name": "io.vertx.core.net.JksOptions"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 3,
                "name": "io.vertx.core.net.NetClient"
              },
              {
                "classes": 0,
                "functions": 40,
                "javadocs": 10,
                "name": "io.vertx.core.net.NetClientOptions"
              },
              {
                "classes": 0,
                "functions": 12,
                "javadocs": 12,
                "name": "io.vertx.core.net.NetServer"
              },
              {
                "classes": 0,
                "functions": 44,
                "javadocs": 14,
                "name": "io.vertx.core.net.NetServerOptions"
              },
              {
                "classes": 0,
                "functions": 16,
                "javadocs": 15,
                "name": "io.vertx.core.net.NetworkOptions"
              },
              {
                "classes": 0,
                "functions": 11,
                "javadocs": 5,
                "name": "io.vertx.core.net.OpenSSLEngineOptions"
              },
              {
                "classes": 0,
                "functions": 15,
                "javadocs": 13,
                "name": "io.vertx.core.net.PemKeyCertOptions"
              },
              {
                "classes": 0,
                "functions": 13,
                "javadocs": 11,
                "name": "io.vertx.core.net.PfxOptions"
              },
              {
                "classes": 0,
                "functions": 16,
                "javadocs": 15,
                "name": "io.vertx.core.net.ProxyOptions"
              },
              {
                "classes": 0,
                "functions": 0,
                "javadocs": 0,
                "name": "io.vertx.core.net.ProxyType"
              },
              {
                "classes": 0,
                "functions": 6,
                "javadocs": 7,
                "name": "io.vertx.core.net.SelfSignedCertificate"
              },
              {
                "classes": 0,
                "functions": 0,
                "javadocs": 1,
                "name": "io.vertx.core.net.ServerOptionsBase"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.net.SocketAddress"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 1,
                "name": "io.vertx.core.net.SSLEngineOptions"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.net.ClientOptionsBaseConverter"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.net.JksOptionsConverter"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetClientOptionsConverter"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetServerOptionsConverter"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.net.NetworkOptionsConverter"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.net.OpenSSLEngineOptionsConverter"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.net.PemKeyCertOptionsConverter"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.net.PfxOptionsConverter"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.net.ProxyOptionsConverter"
              },
              {
                "classes": 0,
                "functions": 13,
                "javadocs": 9,
                "name": "io.vertx.core.parsetools.impl.RecordParserImpl"
              },
              {
                "classes": 0,
                "functions": 8,
                "javadocs": 8,
                "name": "io.vertx.core.parsetools.RecordParser"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.impl.Checker"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.impl.ClusterSerializable"
              },
              {
                "classes": 0,
                "functions": 11,
                "javadocs": 12,
                "name": "io.vertx.core.shareddata.AsyncMap"
              },
              {
                "classes": 0,
                "functions": 7,
                "javadocs": 8,
                "name": "io.vertx.core.shareddata.Counter"
              },
              {
                "classes": 0,
                "functions": 13,
                "javadocs": 14,
                "name": "io.vertx.core.shareddata.LocalMap"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 2,
                "name": "io.vertx.core.shareddata.Lock"
              },
              {
                "classes": 0,
                "functions": 0,
                "javadocs": 1,
                "name": "io.vertx.core.shareddata.Shareable"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 4,
                "name": "io.vertx.core.shareddata.SharedData"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 6,
                "name": "io.vertx.core.spi.cluster.AsyncMultiMap"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 3,
                "name": "io.vertx.core.spi.cluster.ChoosableIterable"
              },
              {
                "classes": 0,
                "functions": 12,
                "javadocs": 7,
                "name": "io.vertx.core.spi.cluster.ClusterManager"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 3,
                "name": "io.vertx.core.spi.cluster.NodeListener"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 4,
                "name": "io.vertx.core.spi.launcher.Command"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 3,
                "name": "io.vertx.core.spi.launcher.CommandFactory"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 2,
                "name": "io.vertx.core.spi.launcher.CommandFactoryLookup"
              },
              {
                "classes": 0,
                "functions": 7,
                "javadocs": 6,
                "name": "io.vertx.core.spi.launcher.DefaultCommand"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 4,
                "name": "io.vertx.core.spi.launcher.DefaultCommandFactory"
              },
              {
                "classes": 0,
                "functions": 8,
                "javadocs": 9,
                "name": "io.vertx.core.spi.launcher.ExecutionContext"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 1,
                "name": "io.vertx.core.spi.logging.LogDelegateFactory"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 2,
                "name": "io.vertx.core.spi.metrics.DatagramSocketMetrics"
              },
              {
                "classes": 0,
                "functions": 10,
                "javadocs": 11,
                "name": "io.vertx.core.spi.metrics.EventBusMetrics"
              },
              {
                "classes": 0,
                "functions": 14,
                "javadocs": 15,
                "name": "io.vertx.core.spi.metrics.HttpClientMetrics"
              },
              {
                "classes": 0,
                "functions": 7,
                "javadocs": 8,
                "name": "io.vertx.core.spi.metrics.HttpServerMetrics"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 3,
                "name": "io.vertx.core.spi.metrics.Metrics"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 2,
                "name": "io.vertx.core.spi.metrics.MetricsProvider"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 4,
                "name": "io.vertx.core.spi.metrics.NetworkMetrics"
              },
              {
                "classes": 0,
                "functions": 4,
                "javadocs": 5,
                "name": "io.vertx.core.spi.metrics.PoolMetrics"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 3,
                "name": "io.vertx.core.spi.metrics.TCPMetrics"
              },
              {
                "classes": 0,
                "functions": 6,
                "javadocs": 1,
                "name": "io.vertx.core.spi.BufferFactory"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 1,
                "name": "io.vertx.core.spi.FutureFactory"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.spi.PumpFactory"
              },
              {
                "classes": 0,
                "functions": 4,
                "javadocs": 1,
                "name": "io.vertx.core.spi.VertxFactory"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 1,
                "name": "io.vertx.core.spi.WebSocketFrameFactory"
              },
              {
                "classes": 0,
                "functions": 6,
                "javadocs": 7,
                "name": "io.vertx.core.streams.Pump"
              },
              {
                "classes": 0,
                "functions": 5,
                "javadocs": 6,
                "name": "io.vertx.core.streams.ReadStream"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 2,
                "name": "io.vertx.core.streams.StreamBase"
              },
              {
                "classes": 0,
                "functions": 9,
                "javadocs": 10,
                "name": "io.vertx.core.AbstractVerticle"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 1,
                "name": "io.vertx.core.Closeable"
              },
              {
                "classes": 0,
                "functions": 21,
                "javadocs": 17,
                "name": "io.vertx.core.Context"
              },
              {
                "classes": 0,
                "functions": 1,
                "javadocs": 2,
                "name": "io.vertx.core.Handler"
              },
              {
                "classes": 0,
                "functions": 7,
                "javadocs": 8,
                "name": "io.vertx.core.Launcher"
              },
              {
                "classes": 0,
                "functions": 26,
                "javadocs": 26,
                "name": "io.vertx.core.MultiMap"
              },
              {
                "classes": 0,
                "functions": 6,
                "javadocs": 2,
                "name": "io.vertx.core.TimeoutStream"
              },
              {
                "classes": 0,
                "functions": 4,
                "javadocs": 5,
                "name": "io.vertx.core.Verticle"
              },
              {
                "classes": 0,
                "functions": 50,
                "javadocs": 49,
                "name": "io.vertx.core.Vertx"
              },
              {
                "classes": 0,
                "functions": 3,
                "javadocs": 3,
                "name": "io.vertx.core.VertxException"
              },
              {
                "classes": 0,
                "functions": 48,
                "javadocs": 46,
                "name": "io.vertx.core.VertxOptions"
              },
              {
                "classes": 0,
                "functions": 2,
                "javadocs": 1,
                "name": "io.vertx.core.VertxOptionsConverter"
              }
            ]
          },
          "packages": {
            "classes": 263,
            "functions": 2498,
            "javadoc_lines": 8191,
            "javadocs": 1354,
            "multi_comment_lines": 10490,
            "single_comment_lines": 112
          }
        }
      },
      {
        "blank_lines": 0,
        "code_lines": 8,
        "comment_lines": 0,
        "files_count": 1,
        "language": "JSON"
      }
    ]
  },
  "schema": {
    "name": "code_metrics",
    "version": "1-0-0"
  },
  "status": "success",
  "summary": {
    "blank_lines": 9072,
    "code_lines": 43302,
    "comment_lines": 27974,
    "total_files": 437,
    "total_lines": 80348
  }
}